// Generated by tool.

import 'package:music_notation/src/smufl/smufl_glyph.dart';

/// Information about the way glyphs are presented in discrete ranges in this specification.
class GlyphRanges {
  /// Accordion.
  static const GlyphRange accordion = GlyphRange(
    description: "Accordion",
    glyphs: [
      SmuflGlyph.accdnRH3RanksPiccolo,
      SmuflGlyph.accdnRH3RanksClarinet,
      SmuflGlyph.accdnRH3RanksUpperTremolo8,
      SmuflGlyph.accdnRH3RanksLowerTremolo8,
      SmuflGlyph.accdnRH3RanksBassoon,
      SmuflGlyph.accdnRH3RanksOboe,
      SmuflGlyph.accdnRH3RanksViolin,
      SmuflGlyph.accdnRH3RanksImitationMusette,
      SmuflGlyph.accdnRH3RanksAuthenticMusette,
      SmuflGlyph.accdnRH3RanksOrgan,
      SmuflGlyph.accdnRH3RanksHarmonium,
      SmuflGlyph.accdnRH3RanksBandoneon,
      SmuflGlyph.accdnRH3RanksAccordion,
      SmuflGlyph.accdnRH3RanksMaster,
      SmuflGlyph.accdnRH3RanksTwoChoirs,
      SmuflGlyph.accdnRH3RanksTremoloLower8ve,
      SmuflGlyph.accdnRH3RanksTremoloUpper8ve,
      SmuflGlyph.accdnRH3RanksDoubleTremoloLower8ve,
      SmuflGlyph.accdnRH3RanksDoubleTremoloUpper8ve,
      SmuflGlyph.accdnRH3RanksFullFactory,
      SmuflGlyph.accdnRH4RanksSoprano,
      SmuflGlyph.accdnRH4RanksAlto,
      SmuflGlyph.accdnRH4RanksTenor,
      SmuflGlyph.accdnRH4RanksMaster,
      SmuflGlyph.accdnRH4RanksSoftBass,
      SmuflGlyph.accdnRH4RanksSoftTenor,
      SmuflGlyph.accdnRH4RanksBassAlto,
      SmuflGlyph.accdnLH2Ranks8Round,
      SmuflGlyph.accdnLH2Ranks16Round,
      SmuflGlyph.accdnLH2Ranks8Plus16Round,
      SmuflGlyph.accdnLH2RanksMasterRound,
      SmuflGlyph.accdnLH2RanksMasterPlus16Round,
      SmuflGlyph.accdnLH2RanksFullMasterRound,
      SmuflGlyph.accdnLH3Ranks8Square,
      SmuflGlyph.accdnLH3Ranks2Square,
      SmuflGlyph.accdnLH3RanksDouble8Square,
      SmuflGlyph.accdnLH3Ranks2Plus8Square,
      SmuflGlyph.accdnLH3RanksTuttiSquare,
      SmuflGlyph.accdnCombRH3RanksEmpty,
      SmuflGlyph.accdnCombRH4RanksEmpty,
      SmuflGlyph.accdnCombLH2RanksEmpty,
      SmuflGlyph.accdnCombLH3RanksEmptySquare,
      SmuflGlyph.accdnCombDot,
      SmuflGlyph.accdnPush,
      SmuflGlyph.accdnPull,
      SmuflGlyph.accdnRicochet2,
      SmuflGlyph.accdnRicochet3,
      SmuflGlyph.accdnRicochet4,
      SmuflGlyph.accdnRicochet5,
      SmuflGlyph.accdnRicochet6,
      SmuflGlyph.accdnRicochetStem2,
      SmuflGlyph.accdnRicochetStem3,
      SmuflGlyph.accdnRicochetStem4,
      SmuflGlyph.accdnRicochetStem5,
      SmuflGlyph.accdnRicochetStem6,
    ],
    rangeStart: "\uE8A0",
    rangeEnd: "\uE8DF",
  );

  /// Analytics.
  static const GlyphRange analytics = GlyphRange(
    description: "Analytics",
    glyphs: [
      SmuflGlyph.analyticsHauptstimme,
      SmuflGlyph.analyticsNebenstimme,
      SmuflGlyph.analyticsStartStimme,
      SmuflGlyph.analyticsEndStimme,
      SmuflGlyph.analyticsTheme,
      SmuflGlyph.analyticsThemeRetrograde,
      SmuflGlyph.analyticsThemeRetrogradeInversion,
      SmuflGlyph.analyticsThemeInversion,
      SmuflGlyph.analyticsTheme1,
      SmuflGlyph.analyticsInversion1,
      SmuflGlyph.analyticsChoralmelodie,
      SmuflGlyph.analyticsHauptrhythmus,
    ],
    rangeStart: "\uE860",
    rangeEnd: "\uE86F",
  );

  /// Arabic accidentals.
  static const GlyphRange arabicAccidentals = GlyphRange(
    description: "Arabic accidentals",
    glyphs: [
      SmuflGlyph.accidentalDoubleFlatArabic,
      SmuflGlyph.accidentalThreeQuarterTonesFlatArabic,
      SmuflGlyph.accidentalFlatArabic,
      SmuflGlyph.accidentalQuarterToneFlatArabic,
      SmuflGlyph.accidentalNaturalArabic,
      SmuflGlyph.accidentalQuarterToneSharpArabic,
      SmuflGlyph.accidentalSharpArabic,
      SmuflGlyph.accidentalThreeQuarterTonesSharpArabic,
      SmuflGlyph.accidentalDoubleSharpArabic,
    ],
    rangeStart: "\uED30",
    rangeEnd: "\uED3F",
  );

  /// Arel-Ezgi-Uzdilek (AEU) accidentals.
  static const GlyphRange arelEzgiUzdilekAeuAccidentals = GlyphRange(
    description: "Arel-Ezgi-Uzdilek (AEU) accidentals",
    glyphs: [
      SmuflGlyph.accidentalBuyukMucennebFlat,
      SmuflGlyph.accidentalKucukMucennebFlat,
      SmuflGlyph.accidentalBakiyeFlat,
      SmuflGlyph.accidentalKomaFlat,
      SmuflGlyph.accidentalKomaSharp,
      SmuflGlyph.accidentalBakiyeSharp,
      SmuflGlyph.accidentalKucukMucennebSharp,
      SmuflGlyph.accidentalBuyukMucennebSharp,
    ],
    rangeStart: "\uE440",
    rangeEnd: "\uE44F",
  );

  /// Arrows and arrowheads.
  static const GlyphRange arrowsAndArrowheads = GlyphRange(
    description: "Arrows and arrowheads",
    glyphs: [
      SmuflGlyph.arrowBlackUp,
      SmuflGlyph.arrowBlackUpRight,
      SmuflGlyph.arrowBlackRight,
      SmuflGlyph.arrowBlackDownRight,
      SmuflGlyph.arrowBlackDown,
      SmuflGlyph.arrowBlackDownLeft,
      SmuflGlyph.arrowBlackLeft,
      SmuflGlyph.arrowBlackUpLeft,
      SmuflGlyph.arrowWhiteUp,
      SmuflGlyph.arrowWhiteUpRight,
      SmuflGlyph.arrowWhiteRight,
      SmuflGlyph.arrowWhiteDownRight,
      SmuflGlyph.arrowWhiteDown,
      SmuflGlyph.arrowWhiteDownLeft,
      SmuflGlyph.arrowWhiteLeft,
      SmuflGlyph.arrowWhiteUpLeft,
      SmuflGlyph.arrowOpenUp,
      SmuflGlyph.arrowOpenUpRight,
      SmuflGlyph.arrowOpenRight,
      SmuflGlyph.arrowOpenDownRight,
      SmuflGlyph.arrowOpenDown,
      SmuflGlyph.arrowOpenDownLeft,
      SmuflGlyph.arrowOpenLeft,
      SmuflGlyph.arrowOpenUpLeft,
      SmuflGlyph.arrowheadBlackUp,
      SmuflGlyph.arrowheadBlackUpRight,
      SmuflGlyph.arrowheadBlackRight,
      SmuflGlyph.arrowheadBlackDownRight,
      SmuflGlyph.arrowheadBlackDown,
      SmuflGlyph.arrowheadBlackDownLeft,
      SmuflGlyph.arrowheadBlackLeft,
      SmuflGlyph.arrowheadBlackUpLeft,
      SmuflGlyph.arrowheadWhiteUp,
      SmuflGlyph.arrowheadWhiteUpRight,
      SmuflGlyph.arrowheadWhiteRight,
      SmuflGlyph.arrowheadWhiteDownRight,
      SmuflGlyph.arrowheadWhiteDown,
      SmuflGlyph.arrowheadWhiteDownLeft,
      SmuflGlyph.arrowheadWhiteLeft,
      SmuflGlyph.arrowheadWhiteUpLeft,
      SmuflGlyph.arrowheadOpenUp,
      SmuflGlyph.arrowheadOpenUpRight,
      SmuflGlyph.arrowheadOpenRight,
      SmuflGlyph.arrowheadOpenDownRight,
      SmuflGlyph.arrowheadOpenDown,
      SmuflGlyph.arrowheadOpenDownLeft,
      SmuflGlyph.arrowheadOpenLeft,
      SmuflGlyph.arrowheadOpenUpLeft,
    ],
    rangeStart: "\uEB60",
    rangeEnd: "\uEB8F",
  );

  /// Articulation.
  static const GlyphRange articulation = GlyphRange(
    description: "Articulation",
    glyphs: [
      SmuflGlyph.articAccentAbove,
      SmuflGlyph.articAccentBelow,
      SmuflGlyph.articStaccatoAbove,
      SmuflGlyph.articStaccatoBelow,
      SmuflGlyph.articTenutoAbove,
      SmuflGlyph.articTenutoBelow,
      SmuflGlyph.articStaccatissimoAbove,
      SmuflGlyph.articStaccatissimoBelow,
      SmuflGlyph.articStaccatissimoWedgeAbove,
      SmuflGlyph.articStaccatissimoWedgeBelow,
      SmuflGlyph.articStaccatissimoStrokeAbove,
      SmuflGlyph.articStaccatissimoStrokeBelow,
      SmuflGlyph.articMarcatoAbove,
      SmuflGlyph.articMarcatoBelow,
      SmuflGlyph.articMarcatoStaccatoAbove,
      SmuflGlyph.articMarcatoStaccatoBelow,
      SmuflGlyph.articAccentStaccatoAbove,
      SmuflGlyph.articAccentStaccatoBelow,
      SmuflGlyph.articTenutoStaccatoAbove,
      SmuflGlyph.articTenutoStaccatoBelow,
      SmuflGlyph.articTenutoAccentAbove,
      SmuflGlyph.articTenutoAccentBelow,
      SmuflGlyph.articStressAbove,
      SmuflGlyph.articStressBelow,
      SmuflGlyph.articUnstressAbove,
      SmuflGlyph.articUnstressBelow,
      SmuflGlyph.articLaissezVibrerAbove,
      SmuflGlyph.articLaissezVibrerBelow,
      SmuflGlyph.articMarcatoTenutoAbove,
      SmuflGlyph.articMarcatoTenutoBelow,
    ],
    rangeStart: "\uE4A0",
    rangeEnd: "\uE4BF",
  );

  /// Articulation supplement.
  static const GlyphRange articulationSupplement = GlyphRange(
    description: "Articulation supplement",
    glyphs: [
      SmuflGlyph.articSoftAccentAbove,
      SmuflGlyph.articSoftAccentBelow,
      SmuflGlyph.articSoftAccentStaccatoAbove,
      SmuflGlyph.articSoftAccentStaccatoBelow,
      SmuflGlyph.articSoftAccentTenutoAbove,
      SmuflGlyph.articSoftAccentTenutoBelow,
      SmuflGlyph.articSoftAccentTenutoStaccatoAbove,
      SmuflGlyph.articSoftAccentTenutoStaccatoBelow,
    ],
    rangeStart: "\uED40",
    rangeEnd: "\uED4F",
  );

  /// Athenian Sagittal extension (medium precision) accidentals.
  static const GlyphRange athenianSagittalExtensionMediumPrecisionAccidentals =
      GlyphRange(
    description: "Athenian Sagittal extension (medium precision) accidentals",
    glyphs: [
      SmuflGlyph.accSagittal7v11KleismaUp,
      SmuflGlyph.accSagittal7v11KleismaDown,
      SmuflGlyph.accSagittal17CommaUp,
      SmuflGlyph.accSagittal17CommaDown,
      SmuflGlyph.accSagittal55CommaUp,
      SmuflGlyph.accSagittal55CommaDown,
      SmuflGlyph.accSagittal7v11CommaUp,
      SmuflGlyph.accSagittal7v11CommaDown,
      SmuflGlyph.accSagittal5v11SmallDiesisUp,
      SmuflGlyph.accSagittal5v11SmallDiesisDown,
      SmuflGlyph.accSagittalSharp5v11SDown,
      SmuflGlyph.accSagittalFlat5v11SUp,
      SmuflGlyph.accSagittalSharp7v11CDown,
      SmuflGlyph.accSagittalFlat7v11CUp,
      SmuflGlyph.accSagittalSharp55CDown,
      SmuflGlyph.accSagittalFlat55CUp,
      SmuflGlyph.accSagittalSharp17CDown,
      SmuflGlyph.accSagittalFlat17CUp,
      SmuflGlyph.accSagittalSharp7v11kDown,
      SmuflGlyph.accSagittalFlat7v11kUp,
      SmuflGlyph.accSagittalSharp7v11kUp,
      SmuflGlyph.accSagittalFlat7v11kDown,
      SmuflGlyph.accSagittalSharp17CUp,
      SmuflGlyph.accSagittalFlat17CDown,
      SmuflGlyph.accSagittalSharp55CUp,
      SmuflGlyph.accSagittalFlat55CDown,
      SmuflGlyph.accSagittalSharp7v11CUp,
      SmuflGlyph.accSagittalFlat7v11CDown,
      SmuflGlyph.accSagittalSharp5v11SUp,
      SmuflGlyph.accSagittalFlat5v11SDown,
      SmuflGlyph.accSagittalDoubleSharp5v11SDown,
      SmuflGlyph.accSagittalDoubleFlat5v11SUp,
      SmuflGlyph.accSagittalDoubleSharp7v11CDown,
      SmuflGlyph.accSagittalDoubleFlat7v11CUp,
      SmuflGlyph.accSagittalDoubleSharp55CDown,
      SmuflGlyph.accSagittalDoubleFlat55CUp,
      SmuflGlyph.accSagittalDoubleSharp17CDown,
      SmuflGlyph.accSagittalDoubleFlat17CUp,
      SmuflGlyph.accSagittalDoubleSharp7v11kDown,
      SmuflGlyph.accSagittalDoubleFlat7v11kUp,
    ],
    rangeStart: "\uE340",
    rangeEnd: "\uE36F",
  );

  /// Bar repeats.
  static const GlyphRange barRepeats = GlyphRange(
    description: "Bar repeats",
    glyphs: [
      SmuflGlyph.repeat1Bar,
      SmuflGlyph.repeat2Bars,
      SmuflGlyph.repeat4Bars,
      SmuflGlyph.repeatBarUpperDot,
      SmuflGlyph.repeatBarSlash,
      SmuflGlyph.repeatBarLowerDot,
    ],
    rangeStart: "\uE500",
    rangeEnd: "\uE50F",
  );

  /// Barlines.
  static const GlyphRange barlines = GlyphRange(
    description: "Barlines",
    glyphs: [
      SmuflGlyph.barlineSingle,
      SmuflGlyph.barlineDouble,
      SmuflGlyph.barlineFinal,
      SmuflGlyph.barlineReverseFinal,
      SmuflGlyph.barlineHeavy,
      SmuflGlyph.barlineHeavyHeavy,
      SmuflGlyph.barlineDashed,
      SmuflGlyph.barlineDotted,
      SmuflGlyph.barlineShort,
      SmuflGlyph.barlineTick,
    ],
    rangeStart: "\uE030",
    rangeEnd: "\uE03F",
  );

  /// Beamed groups of notes.
  static const GlyphRange beamedGroupsOfNotes = GlyphRange(
    description: "Beamed groups of notes",
    glyphs: [
      SmuflGlyph.textBlackNoteShortStem,
      SmuflGlyph.textBlackNoteLongStem,
      SmuflGlyph.textBlackNoteFrac8thShortStem,
      SmuflGlyph.textBlackNoteFrac8thLongStem,
      SmuflGlyph.textBlackNoteFrac16thShortStem,
      SmuflGlyph.textBlackNoteFrac16thLongStem,
      SmuflGlyph.textBlackNoteFrac32ndLongStem,
      SmuflGlyph.textCont8thBeamShortStem,
      SmuflGlyph.textCont8thBeamLongStem,
      SmuflGlyph.textCont16thBeamShortStem,
      SmuflGlyph.textCont16thBeamLongStem,
      SmuflGlyph.textCont32ndBeamLongStem,
      SmuflGlyph.textAugmentationDot,
      SmuflGlyph.textTie,
      SmuflGlyph.textTupletBracketStartShortStem,
      SmuflGlyph.textTuplet3ShortStem,
      SmuflGlyph.textTupletBracketEndShortStem,
      SmuflGlyph.textTupletBracketStartLongStem,
      SmuflGlyph.textTuplet3LongStem,
      SmuflGlyph.textTupletBracketEndLongStem,
      SmuflGlyph.textHeadlessBlackNoteShortStem,
      SmuflGlyph.textHeadlessBlackNoteLongStem,
      SmuflGlyph.textHeadlessBlackNoteFrac8thShortStem,
      SmuflGlyph.textHeadlessBlackNoteFrac8thLongStem,
      SmuflGlyph.textHeadlessBlackNoteFrac16thShortStem,
      SmuflGlyph.textHeadlessBlackNoteFrac16thLongStem,
      SmuflGlyph.textHeadlessBlackNoteFrac32ndLongStem,
    ],
    rangeStart: "\uE1F0",
    rangeEnd: "\uE20F",
  );

  /// Beams and slurs.
  static const GlyphRange beamsAndSlurs = GlyphRange(
    description: "Beams and slurs",
    glyphs: [
      SmuflGlyph.controlBeginBeam,
      SmuflGlyph.controlEndBeam,
      SmuflGlyph.controlBeginTie,
      SmuflGlyph.controlEndTie,
      SmuflGlyph.controlBeginSlur,
      SmuflGlyph.controlEndSlur,
      SmuflGlyph.controlBeginPhrase,
      SmuflGlyph.controlEndPhrase,
    ],
    rangeStart: "\uE8E0",
    rangeEnd: "\uE8EF",
  );

  /// Beaters pictograms.
  static const GlyphRange beatersPictograms = GlyphRange(
    description: "Beaters pictograms",
    glyphs: [
      SmuflGlyph.pictBeaterSoftXylophoneUp,
      SmuflGlyph.pictBeaterSoftXylophoneDown,
      SmuflGlyph.pictBeaterSoftXylophoneRight,
      SmuflGlyph.pictBeaterSoftXylophoneLeft,
      SmuflGlyph.pictBeaterMediumXylophoneUp,
      SmuflGlyph.pictBeaterMediumXylophoneDown,
      SmuflGlyph.pictBeaterMediumXylophoneRight,
      SmuflGlyph.pictBeaterMediumXylophoneLeft,
      SmuflGlyph.pictBeaterHardXylophoneUp,
      SmuflGlyph.pictBeaterHardXylophoneDown,
      SmuflGlyph.pictBeaterHardXylophoneRight,
      SmuflGlyph.pictBeaterHardXylophoneLeft,
      SmuflGlyph.pictBeaterWoodXylophoneUp,
      SmuflGlyph.pictBeaterWoodXylophoneDown,
      SmuflGlyph.pictBeaterWoodXylophoneRight,
      SmuflGlyph.pictBeaterWoodXylophoneLeft,
      SmuflGlyph.pictBeaterSoftGlockenspielUp,
      SmuflGlyph.pictBeaterSoftGlockenspielDown,
      SmuflGlyph.pictBeaterSoftGlockenspielRight,
      SmuflGlyph.pictBeaterSoftGlockenspielLeft,
      SmuflGlyph.pictBeaterHardGlockenspielUp,
      SmuflGlyph.pictBeaterHardGlockenspielDown,
      SmuflGlyph.pictBeaterHardGlockenspielRight,
      SmuflGlyph.pictBeaterHardGlockenspielLeft,
      SmuflGlyph.pictBeaterSoftTimpaniUp,
      SmuflGlyph.pictBeaterSoftTimpaniDown,
      SmuflGlyph.pictBeaterSoftTimpaniRight,
      SmuflGlyph.pictBeaterSoftTimpaniLeft,
      SmuflGlyph.pictBeaterMediumTimpaniUp,
      SmuflGlyph.pictBeaterMediumTimpaniDown,
      SmuflGlyph.pictBeaterMediumTimpaniRight,
      SmuflGlyph.pictBeaterMediumTimpaniLeft,
      SmuflGlyph.pictBeaterHardTimpaniUp,
      SmuflGlyph.pictBeaterHardTimpaniDown,
      SmuflGlyph.pictBeaterHardTimpaniRight,
      SmuflGlyph.pictBeaterHardTimpaniLeft,
      SmuflGlyph.pictBeaterWoodTimpaniUp,
      SmuflGlyph.pictBeaterWoodTimpaniDown,
      SmuflGlyph.pictBeaterWoodTimpaniRight,
      SmuflGlyph.pictBeaterWoodTimpaniLeft,
      SmuflGlyph.pictBeaterSoftBassDrumUp,
      SmuflGlyph.pictBeaterSoftBassDrumDown,
      SmuflGlyph.pictBeaterMediumBassDrumUp,
      SmuflGlyph.pictBeaterMediumBassDrumDown,
      SmuflGlyph.pictBeaterHardBassDrumUp,
      SmuflGlyph.pictBeaterHardBassDrumDown,
      SmuflGlyph.pictBeaterMetalBassDrumUp,
      SmuflGlyph.pictBeaterMetalBassDrumDown,
      SmuflGlyph.pictBeaterDoubleBassDrumUp,
      SmuflGlyph.pictBeaterDoubleBassDrumDown,
      SmuflGlyph.pictBeaterSoftYarnUp,
      SmuflGlyph.pictBeaterSoftYarnDown,
      SmuflGlyph.pictBeaterSoftYarnRight,
      SmuflGlyph.pictBeaterSoftYarnLeft,
      SmuflGlyph.pictBeaterMediumYarnUp,
      SmuflGlyph.pictBeaterMediumYarnDown,
      SmuflGlyph.pictBeaterMediumYarnRight,
      SmuflGlyph.pictBeaterMediumYarnLeft,
      SmuflGlyph.pictBeaterHardYarnUp,
      SmuflGlyph.pictBeaterHardYarnDown,
      SmuflGlyph.pictBeaterHardYarnRight,
      SmuflGlyph.pictBeaterHardYarnLeft,
      SmuflGlyph.pictBeaterSuperballUp,
      SmuflGlyph.pictBeaterSuperballDown,
      SmuflGlyph.pictBeaterSuperballRight,
      SmuflGlyph.pictBeaterSuperballLeft,
      SmuflGlyph.pictSuperball,
      SmuflGlyph.pictWoundHardUp,
      SmuflGlyph.pictWoundHardDown,
      SmuflGlyph.pictWoundHardRight,
      SmuflGlyph.pictWoundHardLeft,
      SmuflGlyph.pictWoundSoftUp,
      SmuflGlyph.pictWoundSoftDown,
      SmuflGlyph.pictWoundSoftRight,
      SmuflGlyph.pictWoundSoftLeft,
      SmuflGlyph.pictGumSoftUp,
      SmuflGlyph.pictGumSoftDown,
      SmuflGlyph.pictGumSoftRight,
      SmuflGlyph.pictGumSoftLeft,
      SmuflGlyph.pictGumMediumUp,
      SmuflGlyph.pictGumMediumDown,
      SmuflGlyph.pictGumMediumRight,
      SmuflGlyph.pictGumMediumLeft,
      SmuflGlyph.pictGumHardUp,
      SmuflGlyph.pictGumHardDown,
      SmuflGlyph.pictGumHardRight,
      SmuflGlyph.pictGumHardLeft,
      SmuflGlyph.pictBeaterMetalUp,
      SmuflGlyph.pictBeaterMetalDown,
      SmuflGlyph.pictBeaterMetalRight,
      SmuflGlyph.pictBeaterMetalLeft,
      SmuflGlyph.pictBeaterHammerWoodUp,
      SmuflGlyph.pictBeaterHammerWoodDown,
      SmuflGlyph.pictBeaterHammerPlasticUp,
      SmuflGlyph.pictBeaterHammerPlasticDown,
      SmuflGlyph.pictBeaterHammerMetalUp,
      SmuflGlyph.pictBeaterHammerMetalDown,
      SmuflGlyph.pictBeaterSnareSticksUp,
      SmuflGlyph.pictBeaterSnareSticksDown,
      SmuflGlyph.pictBeaterJazzSticksUp,
      SmuflGlyph.pictBeaterJazzSticksDown,
      SmuflGlyph.pictBeaterTriangleUp,
      SmuflGlyph.pictBeaterTriangleDown,
      SmuflGlyph.pictBeaterWireBrushesUp,
      SmuflGlyph.pictBeaterWireBrushesDown,
      SmuflGlyph.pictBeaterBrassMalletsUp,
      SmuflGlyph.pictBeaterBrassMalletsDown,
      SmuflGlyph.pictBeaterSoftXylophone,
      SmuflGlyph.pictBeaterSpoonWoodenMallet,
      SmuflGlyph.pictBeaterGuiroScraper,
      SmuflGlyph.pictBeaterBow,
      SmuflGlyph.pictBeaterMallet,
      SmuflGlyph.pictBeaterMetalHammer,
      SmuflGlyph.pictBeaterHammer,
      SmuflGlyph.pictBeaterKnittingNeedle,
      SmuflGlyph.pictBeaterHand,
      SmuflGlyph.pictBeaterFinger,
      SmuflGlyph.pictBeaterFist,
      SmuflGlyph.pictBeaterFingernails,
      SmuflGlyph.pictCoins,
      SmuflGlyph.pictDrumStick,
      SmuflGlyph.pictBeaterCombiningParentheses,
      SmuflGlyph.pictBeaterCombiningDashedCircle,
      SmuflGlyph.pictBeaterBox,
      SmuflGlyph.pictBeaterMalletDown,
      SmuflGlyph.pictBeaterBrassMalletsRight,
      SmuflGlyph.pictBeaterBrassMalletsLeft,
      SmuflGlyph.pictBeaterTrianglePlain,
    ],
    rangeStart: "\uE770",
    rangeEnd: "\uE7EF",
  );

  /// Bells pictograms.
  static const GlyphRange bellsPictograms = GlyphRange(
    description: "Bells pictograms",
    glyphs: [
      SmuflGlyph.pictSleighBell,
      SmuflGlyph.pictCowBell,
      SmuflGlyph.pictAlmglocken,
      SmuflGlyph.pictBellPlate,
      SmuflGlyph.pictBell,
      SmuflGlyph.pictHandbell,
      SmuflGlyph.pictCencerro,
      SmuflGlyph.pictAgogo,
      SmuflGlyph.pictShellBells,
      SmuflGlyph.pictJingleBells,
      SmuflGlyph.pictBellTree,
    ],
    rangeStart: "\uE710",
    rangeEnd: "\uE71F",
  );

  /// Brass techniques.
  static const GlyphRange brassTechniques = GlyphRange(
    description: "Brass techniques",
    glyphs: [
      SmuflGlyph.brassScoop,
      SmuflGlyph.brassLiftShort,
      SmuflGlyph.brassLiftMedium,
      SmuflGlyph.brassLiftLong,
      SmuflGlyph.brassDoitShort,
      SmuflGlyph.brassDoitMedium,
      SmuflGlyph.brassDoitLong,
      SmuflGlyph.brassFallLipShort,
      SmuflGlyph.brassFallLipMedium,
      SmuflGlyph.brassFallLipLong,
      SmuflGlyph.brassFallSmoothShort,
      SmuflGlyph.brassFallSmoothMedium,
      SmuflGlyph.brassFallSmoothLong,
      SmuflGlyph.brassFallRoughShort,
      SmuflGlyph.brassFallRoughMedium,
      SmuflGlyph.brassFallRoughLong,
      SmuflGlyph.brassPlop,
      SmuflGlyph.brassFlip,
      SmuflGlyph.brassSmear,
      SmuflGlyph.brassBend,
      SmuflGlyph.brassJazzTurn,
      SmuflGlyph.brassMuteClosed,
      SmuflGlyph.brassMuteHalfClosed,
      SmuflGlyph.brassMuteOpen,
      SmuflGlyph.brassHarmonMuteClosed,
      SmuflGlyph.brassHarmonMuteStemHalfLeft,
      SmuflGlyph.brassHarmonMuteStemHalfRight,
      SmuflGlyph.brassHarmonMuteStemOpen,
      SmuflGlyph.brassLiftSmoothShort,
      SmuflGlyph.brassLiftSmoothMedium,
      SmuflGlyph.brassLiftSmoothLong,
      SmuflGlyph.brassValveTrill,
    ],
    rangeStart: "\uE5D0",
    rangeEnd: "\uE5EF",
  );

  /// Chimes pictograms.
  static const GlyphRange chimesPictograms = GlyphRange(
    description: "Chimes pictograms",
    glyphs: [
      SmuflGlyph.pictTubularBells,
      SmuflGlyph.pictWindChimesGlass,
      SmuflGlyph.pictChimes,
      SmuflGlyph.pictBambooChimes,
      SmuflGlyph.pictShellChimes,
      SmuflGlyph.pictGlassTubeChimes,
      SmuflGlyph.pictGlassPlateChimes,
      SmuflGlyph.pictMetalTubeChimes,
      SmuflGlyph.pictMetalPlateChimes,
    ],
    rangeStart: "\uE6C0",
    rangeEnd: "\uE6CF",
  );

  /// Chop (percussive bowing) notation.
  static const GlyphRange chopNotation = GlyphRange(
    description: "Chop (percussive bowing) notation",
    glyphs: [
      SmuflGlyph.stringsDownBowTowardsBody,
      SmuflGlyph.stringsUpBowTowardsBody,
      SmuflGlyph.stringsDownBowAwayFromBody,
      SmuflGlyph.stringsUpBowAwayFromBody,
      SmuflGlyph.stringsDownBowBeyondBridge,
      SmuflGlyph.stringsUpBowBeyondBridge,
      SmuflGlyph.stringsScrapeParallelInward,
      SmuflGlyph.stringsScrapeParallelOutward,
      SmuflGlyph.stringsScrapeCircularClockwise,
      SmuflGlyph.stringsScrapeCircularCounterclockwise,
      SmuflGlyph.stringsTripleChopInward,
      SmuflGlyph.stringsTripleChopOutward,
    ],
    rangeStart: "\uEE80",
    rangeEnd: "\uEE8F",
  );

  /// Chord diagrams.
  static const GlyphRange chordDiagrams = GlyphRange(
    description: "Chord diagrams",
    glyphs: [
      SmuflGlyph.fretboard3String,
      SmuflGlyph.fretboard3StringNut,
      SmuflGlyph.fretboard4String,
      SmuflGlyph.fretboard4StringNut,
      SmuflGlyph.fretboard5String,
      SmuflGlyph.fretboard5StringNut,
      SmuflGlyph.fretboard6String,
      SmuflGlyph.fretboard6StringNut,
      SmuflGlyph.fretboardFilledCircle,
      SmuflGlyph.fretboardX,
      SmuflGlyph.fretboardO,
    ],
    rangeStart: "\uE850",
    rangeEnd: "\uE85F",
  );

  /// Chord symbols.
  static const GlyphRange chordSymbols = GlyphRange(
    description: "Chord symbols",
    glyphs: [
      SmuflGlyph.csymDiminished,
      SmuflGlyph.csymHalfDiminished,
      SmuflGlyph.csymAugmented,
      SmuflGlyph.csymMajorSeventh,
      SmuflGlyph.csymMinor,
      SmuflGlyph.csymParensLeftTall,
      SmuflGlyph.csymParensRightTall,
      SmuflGlyph.csymBracketLeftTall,
      SmuflGlyph.csymBracketRightTall,
      SmuflGlyph.csymParensLeftVeryTall,
      SmuflGlyph.csymParensRightVeryTall,
      SmuflGlyph.csymAlteredBassSlash,
      SmuflGlyph.csymDiagonalArrangementSlash,
    ],
    rangeStart: "\uE870",
    rangeEnd: "\uE87F",
  );

  /// Clefs.
  static const GlyphRange clefs = GlyphRange(
    description: "Clefs",
    glyphs: [
      SmuflGlyph.gClef,
      SmuflGlyph.gClef15mb,
      SmuflGlyph.gClef8vb,
      SmuflGlyph.gClef8va,
      SmuflGlyph.gClef15ma,
      SmuflGlyph.gClef8vbOld,
      SmuflGlyph.gClef8vbCClef,
      SmuflGlyph.gClef8vbParens,
      SmuflGlyph.gClefLigatedNumberBelow,
      SmuflGlyph.gClefLigatedNumberAbove,
      SmuflGlyph.gClefArrowUp,
      SmuflGlyph.gClefArrowDown,
      SmuflGlyph.cClef,
      SmuflGlyph.cClef8vb,
      SmuflGlyph.cClefArrowUp,
      SmuflGlyph.cClefArrowDown,
      SmuflGlyph.cClefSquare,
      SmuflGlyph.cClefCombining,
      SmuflGlyph.fClef,
      SmuflGlyph.fClef15mb,
      SmuflGlyph.fClef8vb,
      SmuflGlyph.fClef8va,
      SmuflGlyph.fClef15ma,
      SmuflGlyph.fClefArrowUp,
      SmuflGlyph.fClefArrowDown,
      SmuflGlyph.unpitchedPercussionClef1,
      SmuflGlyph.unpitchedPercussionClef2,
      SmuflGlyph.semipitchedPercussionClef1,
      SmuflGlyph.semipitchedPercussionClef2,
      SmuflGlyph.g6stringTabClef,
      SmuflGlyph.g4stringTabClef,
      SmuflGlyph.schaefferClef,
      SmuflGlyph.schaefferPreviousClef,
      SmuflGlyph.schaefferGClefToFClef,
      SmuflGlyph.schaefferFClefToGClef,
      SmuflGlyph.gClefReversed,
      SmuflGlyph.gClefTurned,
      SmuflGlyph.cClefReversed,
      SmuflGlyph.fClefReversed,
      SmuflGlyph.fClefTurned,
      SmuflGlyph.bridgeClef,
      SmuflGlyph.accdnDiatonicClef,
      SmuflGlyph.gClefChange,
      SmuflGlyph.cClefChange,
      SmuflGlyph.fClefChange,
      SmuflGlyph.clef8,
      SmuflGlyph.clef15,
      SmuflGlyph.clefChangeCombining,
    ],
    rangeStart: "\uE050",
    rangeEnd: "\uE07F",
  );

  /// Clefs supplement.
  static const GlyphRange clefsSupplement = GlyphRange(
    description: "Clefs supplement",
    glyphs: [
      SmuflGlyph.indianDrumClef,
    ],
    rangeStart: "\uED70",
    rangeEnd: "\uED7F",
  );

  /// Combining staff positions.
  static const GlyphRange combiningStaffPositions = GlyphRange(
    description: "Combining staff positions",
    glyphs: [
      SmuflGlyph.staffPosRaise1,
      SmuflGlyph.staffPosRaise2,
      SmuflGlyph.staffPosRaise3,
      SmuflGlyph.staffPosRaise4,
      SmuflGlyph.staffPosRaise5,
      SmuflGlyph.staffPosRaise6,
      SmuflGlyph.staffPosRaise7,
      SmuflGlyph.staffPosRaise8,
      SmuflGlyph.staffPosLower1,
      SmuflGlyph.staffPosLower2,
      SmuflGlyph.staffPosLower3,
      SmuflGlyph.staffPosLower4,
      SmuflGlyph.staffPosLower5,
      SmuflGlyph.staffPosLower6,
      SmuflGlyph.staffPosLower7,
      SmuflGlyph.staffPosLower8,
    ],
    rangeStart: "\uEB90",
    rangeEnd: "\uEB9F",
  );

  /// Combining strokes for trills and mordents.
  static const GlyphRange combiningStrokesForTrillsAndMordents = GlyphRange(
    description: "Combining strokes for trills and mordents",
    glyphs: [
      SmuflGlyph.ornamentTopLeftConcaveStroke,
      SmuflGlyph.ornamentTopLeftConvexStroke,
      SmuflGlyph.ornamentHighLeftConcaveStroke,
      SmuflGlyph.ornamentHighLeftConvexStroke,
      SmuflGlyph.ornamentLeftVerticalStroke,
      SmuflGlyph.ornamentLeftVerticalStrokeWithCross,
      SmuflGlyph.ornamentLeftShakeT,
      SmuflGlyph.ornamentLeftPlus,
      SmuflGlyph.ornamentLowLeftConcaveStroke,
      SmuflGlyph.ornamentLowLeftConvexStroke,
      SmuflGlyph.ornamentBottomLeftConcaveStroke,
      SmuflGlyph.ornamentBottomLeftConcaveStrokeLarge,
      SmuflGlyph.ornamentBottomLeftConvexStroke,
      SmuflGlyph.ornamentZigZagLineNoRightEnd,
      SmuflGlyph.ornamentZigZagLineWithRightEnd,
      SmuflGlyph.ornamentMiddleVerticalStroke,
      SmuflGlyph.ornamentTopRightConcaveStroke,
      SmuflGlyph.ornamentTopRightConvexStroke,
      SmuflGlyph.ornamentHighRightConcaveStroke,
      SmuflGlyph.ornamentHighRightConvexStroke,
      SmuflGlyph.ornamentRightVerticalStroke,
      SmuflGlyph.ornamentLowRightConcaveStroke,
      SmuflGlyph.ornamentLowRightConvexStroke,
      SmuflGlyph.ornamentBottomRightConcaveStroke,
      SmuflGlyph.ornamentBottomRightConvexStroke,
    ],
    rangeStart: "\uE590",
    rangeEnd: "\uE5AF",
  );

  /// Common ornaments.
  static const GlyphRange commonOrnaments = GlyphRange(
    description: "Common ornaments",
    glyphs: [
      SmuflGlyph.graceNoteAcciaccaturaStemUp,
      SmuflGlyph.graceNoteAcciaccaturaStemDown,
      SmuflGlyph.graceNoteAppoggiaturaStemUp,
      SmuflGlyph.graceNoteAppoggiaturaStemDown,
      SmuflGlyph.graceNoteSlashStemUp,
      SmuflGlyph.graceNoteSlashStemDown,
      SmuflGlyph.ornamentTrill,
      SmuflGlyph.ornamentTurn,
      SmuflGlyph.ornamentTurnInverted,
      SmuflGlyph.ornamentTurnSlash,
      SmuflGlyph.ornamentTurnUp,
      SmuflGlyph.ornamentTurnUpS,
      SmuflGlyph.ornamentShortTrill,
      SmuflGlyph.ornamentMordent,
      SmuflGlyph.ornamentTremblement,
      SmuflGlyph.ornamentHaydn,
    ],
    rangeStart: "\uE560",
    rangeEnd: "\uE56F",
  );

  /// Conductor symbols.
  static const GlyphRange conductorSymbols = GlyphRange(
    description: "Conductor symbols",
    glyphs: [
      SmuflGlyph.conductorStrongBeat,
      SmuflGlyph.conductorLeftBeat,
      SmuflGlyph.conductorRightBeat,
      SmuflGlyph.conductorWeakBeat,
      SmuflGlyph.conductorBeat2Simple,
      SmuflGlyph.conductorBeat3Simple,
      SmuflGlyph.conductorBeat4Simple,
      SmuflGlyph.conductorBeat2Compound,
      SmuflGlyph.conductorBeat3Compound,
      SmuflGlyph.conductorBeat4Compound,
      SmuflGlyph.conductorUnconducted,
    ],
    rangeStart: "\uE890",
    rangeEnd: "\uE89F",
  );

  /// Cymbals pictograms.
  static const GlyphRange cymbalsPictograms = GlyphRange(
    description: "Cymbals pictograms",
    glyphs: [
      SmuflGlyph.pictCrashCymbals,
      SmuflGlyph.pictSuspendedCymbal,
      SmuflGlyph.pictHiHat,
      SmuflGlyph.pictHiHatOnStand,
      SmuflGlyph.pictSizzleCymbal,
      SmuflGlyph.pictVietnameseHat,
      SmuflGlyph.pictChineseCymbal,
      SmuflGlyph.pictFingerCymbals,
      SmuflGlyph.pictCymbalTongs,
      SmuflGlyph.pictEdgeOfCymbal,
      SmuflGlyph.pictBellOfCymbal,
    ],
    rangeStart: "\uE720",
    rangeEnd: "\uE72F",
  );

  /// Daseian notation.
  static const GlyphRange daseianNotation = GlyphRange(
    description: "Daseian notation",
    glyphs: [
      SmuflGlyph.daseianGraves1,
      SmuflGlyph.daseianGraves2,
      SmuflGlyph.daseianGraves3,
      SmuflGlyph.daseianGraves4,
      SmuflGlyph.daseianFinales1,
      SmuflGlyph.daseianFinales2,
      SmuflGlyph.daseianFinales3,
      SmuflGlyph.daseianFinales4,
      SmuflGlyph.daseianSuperiores1,
      SmuflGlyph.daseianSuperiores2,
      SmuflGlyph.daseianSuperiores3,
      SmuflGlyph.daseianSuperiores4,
      SmuflGlyph.daseianExcellentes1,
      SmuflGlyph.daseianExcellentes2,
      SmuflGlyph.daseianExcellentes3,
      SmuflGlyph.daseianExcellentes4,
      SmuflGlyph.daseianResidua1,
      SmuflGlyph.daseianResidua2,
    ],
    rangeStart: "\uEA30",
    rangeEnd: "\uEA4F",
  );

  /// Drums pictograms.
  static const GlyphRange drumsPictograms = GlyphRange(
    description: "Drums pictograms",
    glyphs: [
      SmuflGlyph.pictTimpani,
      SmuflGlyph.pictSnareDrum,
      SmuflGlyph.pictSnareDrumSnaresOff,
      SmuflGlyph.pictSnareDrumMilitary,
      SmuflGlyph.pictBassDrum,
      SmuflGlyph.pictBassDrumOnSide,
      SmuflGlyph.pictTenorDrum,
      SmuflGlyph.pictTomTom,
      SmuflGlyph.pictTomTomChinese,
      SmuflGlyph.pictTomTomJapanese,
      SmuflGlyph.pictTomTomIndoAmerican,
      SmuflGlyph.pictTambourine,
      SmuflGlyph.pictTimbales,
      SmuflGlyph.pictBongos,
      SmuflGlyph.pictConga,
      SmuflGlyph.pictLogDrum,
      SmuflGlyph.pictSlitDrum,
      SmuflGlyph.pictBrakeDrum,
      SmuflGlyph.pictGobletDrum,
      SmuflGlyph.pictTabla,
      SmuflGlyph.pictCuica,
    ],
    rangeStart: "\uE6D0",
    rangeEnd: "\uE6EF",
  );

  /// Dynamics.
  static const GlyphRange dynamics = GlyphRange(
    description: "Dynamics",
    glyphs: [
      SmuflGlyph.dynamicPiano,
      SmuflGlyph.dynamicMezzo,
      SmuflGlyph.dynamicForte,
      SmuflGlyph.dynamicRinforzando,
      SmuflGlyph.dynamicSforzando,
      SmuflGlyph.dynamicZ,
      SmuflGlyph.dynamicNiente,
      SmuflGlyph.dynamicPPPPPP,
      SmuflGlyph.dynamicPPPPP,
      SmuflGlyph.dynamicPPPP,
      SmuflGlyph.dynamicPPP,
      SmuflGlyph.dynamicPP,
      SmuflGlyph.dynamicMP,
      SmuflGlyph.dynamicMF,
      SmuflGlyph.dynamicPF,
      SmuflGlyph.dynamicFF,
      SmuflGlyph.dynamicFFF,
      SmuflGlyph.dynamicFFFF,
      SmuflGlyph.dynamicFFFFF,
      SmuflGlyph.dynamicFFFFFF,
      SmuflGlyph.dynamicFortePiano,
      SmuflGlyph.dynamicForzando,
      SmuflGlyph.dynamicSforzando1,
      SmuflGlyph.dynamicSforzandoPiano,
      SmuflGlyph.dynamicSforzandoPianissimo,
      SmuflGlyph.dynamicSforzato,
      SmuflGlyph.dynamicSforzatoPiano,
      SmuflGlyph.dynamicSforzatoFF,
      SmuflGlyph.dynamicRinforzando1,
      SmuflGlyph.dynamicRinforzando2,
      SmuflGlyph.dynamicCrescendoHairpin,
      SmuflGlyph.dynamicDiminuendoHairpin,
      SmuflGlyph.dynamicMessaDiVoce,
      SmuflGlyph.dynamicNienteForHairpin,
      SmuflGlyph.dynamicHairpinParenthesisLeft,
      SmuflGlyph.dynamicHairpinParenthesisRight,
      SmuflGlyph.dynamicHairpinBracketLeft,
      SmuflGlyph.dynamicHairpinBracketRight,
      SmuflGlyph.dynamicCombinedSeparatorColon,
      SmuflGlyph.dynamicCombinedSeparatorHyphen,
      SmuflGlyph.dynamicCombinedSeparatorSpace,
      SmuflGlyph.dynamicCombinedSeparatorSlash,
    ],
    rangeStart: "\uE520",
    rangeEnd: "\uE54F",
  );

  /// Electronic music pictograms.
  static const GlyphRange electronicMusicPictograms = GlyphRange(
    description: "Electronic music pictograms",
    glyphs: [
      SmuflGlyph.elecMicrophone,
      SmuflGlyph.elecHeadphones,
      SmuflGlyph.elecHeadset,
      SmuflGlyph.elecDisc,
      SmuflGlyph.elecTape,
      SmuflGlyph.elecMixingConsole,
      SmuflGlyph.elecUSB,
      SmuflGlyph.elecVideoCamera,
      SmuflGlyph.elecMonitor,
      SmuflGlyph.elecProjector,
      SmuflGlyph.elecLoudspeaker,
      SmuflGlyph.elecCamera,
      SmuflGlyph.elecPlay,
      SmuflGlyph.elecStop,
      SmuflGlyph.elecPause,
      SmuflGlyph.elecFastForward,
      SmuflGlyph.elecRewind,
      SmuflGlyph.elecSkipForwards,
      SmuflGlyph.elecSkipBackwards,
      SmuflGlyph.elecLoop,
      SmuflGlyph.elecReplay,
      SmuflGlyph.elecShuffle,
      SmuflGlyph.elecMute,
      SmuflGlyph.elecUnmute,
      SmuflGlyph.elecMicrophoneMute,
      SmuflGlyph.elecMicrophoneUnmute,
      SmuflGlyph.elecPowerOnOff,
      SmuflGlyph.elecEject,
      SmuflGlyph.elecVolumeFader,
      SmuflGlyph.elecVolumeFaderThumb,
      SmuflGlyph.elecVolumeLevel0,
      SmuflGlyph.elecVolumeLevel20,
      SmuflGlyph.elecVolumeLevel40,
      SmuflGlyph.elecVolumeLevel60,
      SmuflGlyph.elecVolumeLevel80,
      SmuflGlyph.elecVolumeLevel100,
      SmuflGlyph.elecMIDIIn,
      SmuflGlyph.elecMIDIOut,
      SmuflGlyph.elecMIDIController0,
      SmuflGlyph.elecMIDIController20,
      SmuflGlyph.elecMIDIController40,
      SmuflGlyph.elecMIDIController60,
      SmuflGlyph.elecMIDIController80,
      SmuflGlyph.elecMIDIController100,
      SmuflGlyph.elecAudioMono,
      SmuflGlyph.elecAudioStereo,
      SmuflGlyph.elecAudioChannelsOne,
      SmuflGlyph.elecAudioChannelsTwo,
      SmuflGlyph.elecAudioChannelsThreeFrontal,
      SmuflGlyph.elecAudioChannelsThreeSurround,
      SmuflGlyph.elecAudioChannelsFour,
      SmuflGlyph.elecAudioChannelsFive,
      SmuflGlyph.elecAudioChannelsSix,
      SmuflGlyph.elecAudioChannelsSeven,
      SmuflGlyph.elecAudioChannelsEight,
      SmuflGlyph.elecLineIn,
      SmuflGlyph.elecLineOut,
      SmuflGlyph.elecAudioIn,
      SmuflGlyph.elecAudioOut,
      SmuflGlyph.elecVideoIn,
      SmuflGlyph.elecVideoOut,
      SmuflGlyph.elecDataIn,
      SmuflGlyph.elecDataOut,
      SmuflGlyph.elecDownload,
      SmuflGlyph.elecUpload,
    ],
    rangeStart: "\uEB10",
    rangeEnd: "\uEB5F",
  );

  /// Extended Helmholtz-Ellis accidentals (just intonation).
  static const GlyphRange extendedHelmholtzEllisAccidentalsJustIntonation =
      GlyphRange(
    description: "Extended Helmholtz-Ellis accidentals (just intonation)",
    glyphs: [
      SmuflGlyph.accidentalDoubleFlatOneArrowDown,
      SmuflGlyph.accidentalFlatOneArrowDown,
      SmuflGlyph.accidentalNaturalOneArrowDown,
      SmuflGlyph.accidentalSharpOneArrowDown,
      SmuflGlyph.accidentalDoubleSharpOneArrowDown,
      SmuflGlyph.accidentalDoubleFlatOneArrowUp,
      SmuflGlyph.accidentalFlatOneArrowUp,
      SmuflGlyph.accidentalNaturalOneArrowUp,
      SmuflGlyph.accidentalSharpOneArrowUp,
      SmuflGlyph.accidentalDoubleSharpOneArrowUp,
      SmuflGlyph.accidentalDoubleFlatTwoArrowsDown,
      SmuflGlyph.accidentalFlatTwoArrowsDown,
      SmuflGlyph.accidentalNaturalTwoArrowsDown,
      SmuflGlyph.accidentalSharpTwoArrowsDown,
      SmuflGlyph.accidentalDoubleSharpTwoArrowsDown,
      SmuflGlyph.accidentalDoubleFlatTwoArrowsUp,
      SmuflGlyph.accidentalFlatTwoArrowsUp,
      SmuflGlyph.accidentalNaturalTwoArrowsUp,
      SmuflGlyph.accidentalSharpTwoArrowsUp,
      SmuflGlyph.accidentalDoubleSharpTwoArrowsUp,
      SmuflGlyph.accidentalDoubleFlatThreeArrowsDown,
      SmuflGlyph.accidentalFlatThreeArrowsDown,
      SmuflGlyph.accidentalNaturalThreeArrowsDown,
      SmuflGlyph.accidentalSharpThreeArrowsDown,
      SmuflGlyph.accidentalDoubleSharpThreeArrowsDown,
      SmuflGlyph.accidentalDoubleFlatThreeArrowsUp,
      SmuflGlyph.accidentalFlatThreeArrowsUp,
      SmuflGlyph.accidentalNaturalThreeArrowsUp,
      SmuflGlyph.accidentalSharpThreeArrowsUp,
      SmuflGlyph.accidentalDoubleSharpThreeArrowsUp,
      SmuflGlyph.accidentalLowerOneSeptimalComma,
      SmuflGlyph.accidentalRaiseOneSeptimalComma,
      SmuflGlyph.accidentalLowerTwoSeptimalCommas,
      SmuflGlyph.accidentalRaiseTwoSeptimalCommas,
      SmuflGlyph.accidentalLowerOneUndecimalQuartertone,
      SmuflGlyph.accidentalRaiseOneUndecimalQuartertone,
      SmuflGlyph.accidentalLowerOneTridecimalQuartertone,
      SmuflGlyph.accidentalRaiseOneTridecimalQuartertone,
      SmuflGlyph.accidentalCombiningLower17Schisma,
      SmuflGlyph.accidentalCombiningRaise17Schisma,
      SmuflGlyph.accidentalCombiningLower19Schisma,
      SmuflGlyph.accidentalCombiningRaise19Schisma,
      SmuflGlyph.accidentalCombiningLower23Limit29LimitComma,
      SmuflGlyph.accidentalCombiningRaise23Limit29LimitComma,
      SmuflGlyph.accidentalCombiningLower31Schisma,
      SmuflGlyph.accidentalCombiningRaise31Schisma,
      SmuflGlyph.accidentalCombiningOpenCurlyBrace,
      SmuflGlyph.accidentalCombiningCloseCurlyBrace,
      SmuflGlyph.accidentalDoubleFlatEqualTempered,
      SmuflGlyph.accidentalFlatEqualTempered,
      SmuflGlyph.accidentalNaturalEqualTempered,
      SmuflGlyph.accidentalSharpEqualTempered,
      SmuflGlyph.accidentalDoubleSharpEqualTempered,
      SmuflGlyph.accidentalQuarterFlatEqualTempered,
      SmuflGlyph.accidentalQuarterSharpEqualTempered,
      SmuflGlyph.accidentalCombiningLower53LimitComma,
      SmuflGlyph.accidentalCombiningRaise53LimitComma,
      SmuflGlyph.accidentalEnharmonicTilde,
      SmuflGlyph.accidentalEnharmonicAlmostEqualTo,
      SmuflGlyph.accidentalEnharmonicEquals,
    ],
    rangeStart: "\uE2C0",
    rangeEnd: "\uE2FF",
  );

  /// Extended Helmholtz-Ellis accidentals (just intonation) supplement.
  static const GlyphRange
      extendedHelmholtzEllisAccidentalsJustIntonationSupplement = GlyphRange(
    description:
        "Extended Helmholtz-Ellis accidentals (just intonation) supplement",
    glyphs: [
      SmuflGlyph.accidentalCombiningLower29LimitComma,
      SmuflGlyph.accidentalCombiningRaise29LimitComma,
      SmuflGlyph.accidentalCombiningLower37Quartertone,
      SmuflGlyph.accidentalCombiningRaise37Quartertone,
      SmuflGlyph.accidentalCombiningLower41Comma,
      SmuflGlyph.accidentalCombiningRaise41Comma,
      SmuflGlyph.accidentalCombiningLower43Comma,
      SmuflGlyph.accidentalCombiningRaise43Comma,
      SmuflGlyph.accidentalCombiningLower47Quartertone,
      SmuflGlyph.accidentalCombiningRaise47Quartertone,
    ],
    rangeStart: "\uEE50",
    rangeEnd: "\uEE5F",
  );

  /// Extended Stein-Zimmermann accidentals.
  static const GlyphRange extendedSteinZimmermannAccidentals = GlyphRange(
    description: "Extended Stein-Zimmermann accidentals",
    glyphs: [
      SmuflGlyph.accidentalReversedFlatArrowUp,
      SmuflGlyph.accidentalReversedFlatArrowDown,
      SmuflGlyph.accidentalFilledReversedFlatArrowUp,
      SmuflGlyph.accidentalFilledReversedFlatArrowDown,
      SmuflGlyph.accidentalReversedFlatAndFlatArrowUp,
      SmuflGlyph.accidentalReversedFlatAndFlatArrowDown,
      SmuflGlyph.accidentalFilledReversedFlatAndFlat,
      SmuflGlyph.accidentalFilledReversedFlatAndFlatArrowUp,
      SmuflGlyph.accidentalFilledReversedFlatAndFlatArrowDown,
      SmuflGlyph.accidentalHalfSharpArrowUp,
      SmuflGlyph.accidentalHalfSharpArrowDown,
      SmuflGlyph.accidentalOneAndAHalfSharpsArrowUp,
      SmuflGlyph.accidentalOneAndAHalfSharpsArrowDown,
    ],
    rangeStart: "\uE290",
    rangeEnd: "\uE29F",
  );

  /// Figured bass.
  static const GlyphRange figuredBass = GlyphRange(
    description: "Figured bass",
    glyphs: [
      SmuflGlyph.figbass0,
      SmuflGlyph.figbass1,
      SmuflGlyph.figbass2,
      SmuflGlyph.figbass2Raised,
      SmuflGlyph.figbass3,
      SmuflGlyph.figbass4,
      SmuflGlyph.figbass4Raised,
      SmuflGlyph.figbass5,
      SmuflGlyph.figbass5Raised1,
      SmuflGlyph.figbass5Raised2,
      SmuflGlyph.figbass5Raised3,
      SmuflGlyph.figbass6,
      SmuflGlyph.figbass6Raised,
      SmuflGlyph.figbass7,
      SmuflGlyph.figbass7Raised1,
      SmuflGlyph.figbass7Raised2,
      SmuflGlyph.figbass8,
      SmuflGlyph.figbass9,
      SmuflGlyph.figbass9Raised,
      SmuflGlyph.figbassDoubleFlat,
      SmuflGlyph.figbassFlat,
      SmuflGlyph.figbassNatural,
      SmuflGlyph.figbassSharp,
      SmuflGlyph.figbassDoubleSharp,
      SmuflGlyph.figbassBracketLeft,
      SmuflGlyph.figbassBracketRight,
      SmuflGlyph.figbassParensLeft,
      SmuflGlyph.figbassParensRight,
      SmuflGlyph.figbassPlus,
      SmuflGlyph.figbassCombiningRaising,
      SmuflGlyph.figbassCombiningLowering,
      SmuflGlyph.figbass6Raised2,
    ],
    rangeStart: "\uEA50",
    rangeEnd: "\uEA6F",
  );

  /// Figured bass supplement.
  static const GlyphRange figuredBassSupplement = GlyphRange(
    description: "Figured bass supplement",
    glyphs: [
      SmuflGlyph.figbass7Diminished,
      SmuflGlyph.figbassTripleFlat,
      SmuflGlyph.figbassTripleSharp,
    ],
    rangeStart: "\uECC0",
    rangeEnd: "\uECCF",
  );

  /// Fingering.
  static const GlyphRange fingering = GlyphRange(
    description: "Fingering",
    glyphs: [
      SmuflGlyph.fingering0,
      SmuflGlyph.fingering1,
      SmuflGlyph.fingering2,
      SmuflGlyph.fingering3,
      SmuflGlyph.fingering4,
      SmuflGlyph.fingering5,
      SmuflGlyph.fingeringTUpper,
      SmuflGlyph.fingeringPLower,
      SmuflGlyph.fingeringTLower,
      SmuflGlyph.fingeringILower,
      SmuflGlyph.fingeringMLower,
      SmuflGlyph.fingeringALower,
      SmuflGlyph.fingeringCLower,
      SmuflGlyph.fingeringXLower,
      SmuflGlyph.fingeringELower,
      SmuflGlyph.fingeringOLower,
      SmuflGlyph.fingeringSubstitutionAbove,
      SmuflGlyph.fingeringSubstitutionBelow,
      SmuflGlyph.fingeringSubstitutionDash,
      SmuflGlyph.fingeringMultipleNotes,
      SmuflGlyph.fingering6,
      SmuflGlyph.fingering7,
      SmuflGlyph.fingering8,
      SmuflGlyph.fingering9,
      SmuflGlyph.fingeringLeftParenthesis,
      SmuflGlyph.fingeringRightParenthesis,
      SmuflGlyph.fingeringLeftBracket,
      SmuflGlyph.fingeringRightBracket,
      SmuflGlyph.fingeringSeparatorMiddleDot,
      SmuflGlyph.fingeringSeparatorMiddleDotWhite,
      SmuflGlyph.fingeringSeparatorSlash,
    ],
    rangeStart: "\uED10",
    rangeEnd: "\uED2F",
  );

  /// Fingering supplement.
  static const GlyphRange fingeringSupplement = GlyphRange(
    description: "Fingering supplement",
    glyphs: [
      SmuflGlyph.fingering0Italic,
      SmuflGlyph.fingering1Italic,
      SmuflGlyph.fingering2Italic,
      SmuflGlyph.fingering3Italic,
      SmuflGlyph.fingering4Italic,
      SmuflGlyph.fingering5Italic,
      SmuflGlyph.fingering6Italic,
      SmuflGlyph.fingering7Italic,
      SmuflGlyph.fingering8Italic,
      SmuflGlyph.fingering9Italic,
      SmuflGlyph.fingeringLeftParenthesisItalic,
      SmuflGlyph.fingeringRightParenthesisItalic,
      SmuflGlyph.fingeringLeftBracketItalic,
      SmuflGlyph.fingeringRightBracketItalic,
      SmuflGlyph.fingeringQLower,
      SmuflGlyph.fingeringSLower,
    ],
    rangeStart: "\uED80",
    rangeEnd: "\uED9F",
  );

  /// Flags.
  static const GlyphRange flags = GlyphRange(
    description: "Flags",
    glyphs: [
      SmuflGlyph.flag8thUp,
      SmuflGlyph.flag8thDown,
      SmuflGlyph.flag16thUp,
      SmuflGlyph.flag16thDown,
      SmuflGlyph.flag32ndUp,
      SmuflGlyph.flag32ndDown,
      SmuflGlyph.flag64thUp,
      SmuflGlyph.flag64thDown,
      SmuflGlyph.flag128thUp,
      SmuflGlyph.flag128thDown,
      SmuflGlyph.flag256thUp,
      SmuflGlyph.flag256thDown,
      SmuflGlyph.flag512thUp,
      SmuflGlyph.flag512thDown,
      SmuflGlyph.flag1024thUp,
      SmuflGlyph.flag1024thDown,
      SmuflGlyph.flagInternalUp,
      SmuflGlyph.flagInternalDown,
    ],
    rangeStart: "\uE240",
    rangeEnd: "\uE25F",
  );

  /// French and English Renaissance lute tablature.
  static const GlyphRange frenchAndEnglishRenaissanceLuteTablature = GlyphRange(
    description: "French and English Renaissance lute tablature",
    glyphs: [
      SmuflGlyph.luteFrenchFretA,
      SmuflGlyph.luteFrenchFretB,
      SmuflGlyph.luteFrenchFretC,
      SmuflGlyph.luteFrenchFretD,
      SmuflGlyph.luteFrenchFretE,
      SmuflGlyph.luteFrenchFretF,
      SmuflGlyph.luteFrenchFretG,
      SmuflGlyph.luteFrenchFretH,
      SmuflGlyph.luteFrenchFretI,
      SmuflGlyph.luteFrenchFretK,
      SmuflGlyph.luteFrenchFretL,
      SmuflGlyph.luteFrenchFretM,
      SmuflGlyph.luteFrenchFretN,
      SmuflGlyph.luteFrench7thCourse,
      SmuflGlyph.luteFrench8thCourse,
      SmuflGlyph.luteFrench9thCourse,
      SmuflGlyph.luteFrench10thCourse,
      SmuflGlyph.luteFrenchMordentUpper,
      SmuflGlyph.luteFrenchMordentLower,
      SmuflGlyph.luteFrenchMordentInverted,
      SmuflGlyph.luteFrenchAppoggiaturaBelow,
      SmuflGlyph.luteFrenchAppoggiaturaAbove,
    ],
    rangeStart: "\uEBC0",
    rangeEnd: "\uEBDF",
  );

  /// Function theory symbols.
  static const GlyphRange functionTheorySymbols = GlyphRange(
    description: "Function theory symbols",
    glyphs: [
      SmuflGlyph.functionZero,
      SmuflGlyph.functionOne,
      SmuflGlyph.functionTwo,
      SmuflGlyph.functionThree,
      SmuflGlyph.functionFour,
      SmuflGlyph.functionFive,
      SmuflGlyph.functionSix,
      SmuflGlyph.functionSeven,
      SmuflGlyph.functionEight,
      SmuflGlyph.functionNine,
      SmuflGlyph.functionLessThan,
      SmuflGlyph.functionMinus,
      SmuflGlyph.functionGreaterThan,
      SmuflGlyph.functionSSUpper,
      SmuflGlyph.functionSSLower,
      SmuflGlyph.functionDUpper,
      SmuflGlyph.functionDLower,
      SmuflGlyph.functionDD,
      SmuflGlyph.functionSlashedDD,
      SmuflGlyph.functionGUpper,
      SmuflGlyph.functionGLower,
      SmuflGlyph.functionNUpper,
      SmuflGlyph.functionNLower,
      SmuflGlyph.functionPUpper,
      SmuflGlyph.functionPLower,
      SmuflGlyph.functionSUpper,
      SmuflGlyph.functionSLower,
      SmuflGlyph.functionTUpper,
      SmuflGlyph.functionTLower,
      SmuflGlyph.functionVUpper,
      SmuflGlyph.functionVLower,
      SmuflGlyph.functionBracketLeft,
      SmuflGlyph.functionBracketRight,
      SmuflGlyph.functionParensLeft,
      SmuflGlyph.functionParensRight,
      SmuflGlyph.functionAngleLeft,
      SmuflGlyph.functionAngleRight,
      SmuflGlyph.functionRepetition1,
      SmuflGlyph.functionRepetition2,
      SmuflGlyph.functionRing,
      SmuflGlyph.functionPlus,
      SmuflGlyph.functionFUpper,
      SmuflGlyph.functionIUpper,
      SmuflGlyph.functionILower,
      SmuflGlyph.functionKUpper,
      SmuflGlyph.functionKLower,
      SmuflGlyph.functionLUpper,
      SmuflGlyph.functionLLower,
    ],
    rangeStart: "\uEA70",
    rangeEnd: "\uEA9F",
  );

  /// Function theory symbols supplement.
  static const GlyphRange functionTheorySymbolsSupplement = GlyphRange(
    description: "Function theory symbols supplement",
    glyphs: [
      SmuflGlyph.functionMUpper,
      SmuflGlyph.functionMLower,
      SmuflGlyph.functionNUpperSuperscript,
      SmuflGlyph.functionRLower,
    ],
    rangeStart: "\uED00",
    rangeEnd: "\uED0F",
  );

  /// German Renaissance lute tablature.
  static const GlyphRange germanRenaissanceLuteTablature = GlyphRange(
    description: "German Renaissance lute tablature",
    glyphs: [
      SmuflGlyph.luteGermanALower,
      SmuflGlyph.luteGermanBLower,
      SmuflGlyph.luteGermanCLower,
      SmuflGlyph.luteGermanDLower,
      SmuflGlyph.luteGermanELower,
      SmuflGlyph.luteGermanFLower,
      SmuflGlyph.luteGermanGLower,
      SmuflGlyph.luteGermanHLower,
      SmuflGlyph.luteGermanILower,
      SmuflGlyph.luteGermanKLower,
      SmuflGlyph.luteGermanLLower,
      SmuflGlyph.luteGermanMLower,
      SmuflGlyph.luteGermanNLower,
      SmuflGlyph.luteGermanOLower,
      SmuflGlyph.luteGermanPLower,
      SmuflGlyph.luteGermanQLower,
      SmuflGlyph.luteGermanRLower,
      SmuflGlyph.luteGermanSLower,
      SmuflGlyph.luteGermanTLower,
      SmuflGlyph.luteGermanVLower,
      SmuflGlyph.luteGermanXLower,
      SmuflGlyph.luteGermanYLower,
      SmuflGlyph.luteGermanZLower,
      SmuflGlyph.luteGermanAUpper,
      SmuflGlyph.luteGermanBUpper,
      SmuflGlyph.luteGermanCUpper,
      SmuflGlyph.luteGermanDUpper,
      SmuflGlyph.luteGermanEUpper,
      SmuflGlyph.luteGermanFUpper,
      SmuflGlyph.luteGermanGUpper,
      SmuflGlyph.luteGermanHUpper,
      SmuflGlyph.luteGermanIUpper,
      SmuflGlyph.luteGermanKUpper,
      SmuflGlyph.luteGermanLUpper,
      SmuflGlyph.luteGermanMUpper,
      SmuflGlyph.luteGermanNUpper,
    ],
    rangeStart: "\uEC00",
    rangeEnd: "\uEC2F",
  );

  /// Gongs pictograms.
  static const GlyphRange gongsPictograms = GlyphRange(
    description: "Gongs pictograms",
    glyphs: [
      SmuflGlyph.pictTamTam,
      SmuflGlyph.pictTamTamWithBeater,
      SmuflGlyph.pictGong,
      SmuflGlyph.pictGongWithButton,
      SmuflGlyph.pictSlideBrushOnGong,
    ],
    rangeStart: "\uE730",
    rangeEnd: "\uE73F",
  );

  /// Gould arrow quartertone accidentals (24-EDO).
  static const GlyphRange gouldArrowQuartertoneAccidentals24Edo = GlyphRange(
    description: "Gould arrow quartertone accidentals (24-EDO)",
    glyphs: [
      SmuflGlyph.accidentalQuarterToneFlatArrowUp,
      SmuflGlyph.accidentalThreeQuarterTonesFlatArrowDown,
      SmuflGlyph.accidentalQuarterToneSharpNaturalArrowUp,
      SmuflGlyph.accidentalQuarterToneFlatNaturalArrowDown,
      SmuflGlyph.accidentalThreeQuarterTonesSharpArrowUp,
      SmuflGlyph.accidentalQuarterToneSharpArrowDown,
      SmuflGlyph.accidentalFiveQuarterTonesSharpArrowUp,
      SmuflGlyph.accidentalThreeQuarterTonesSharpArrowDown,
      SmuflGlyph.accidentalThreeQuarterTonesFlatArrowUp,
      SmuflGlyph.accidentalFiveQuarterTonesFlatArrowDown,
      SmuflGlyph.accidentalArrowUp,
      SmuflGlyph.accidentalArrowDown,
    ],
    rangeStart: "\uE270",
    rangeEnd: "\uE27F",
  );

  /// Guitar.
  static const GlyphRange guitar = GlyphRange(
    description: "Guitar",
    glyphs: [
      SmuflGlyph.guitarVibratoBarScoop,
      SmuflGlyph.guitarVibratoBarDip,
      SmuflGlyph.guitarShake,
      SmuflGlyph.guitarString0,
      SmuflGlyph.guitarString1,
      SmuflGlyph.guitarString2,
      SmuflGlyph.guitarString3,
      SmuflGlyph.guitarString4,
      SmuflGlyph.guitarString5,
      SmuflGlyph.guitarString6,
      SmuflGlyph.guitarString7,
      SmuflGlyph.guitarString8,
      SmuflGlyph.guitarString9,
      SmuflGlyph.guitarOpenPedal,
      SmuflGlyph.guitarHalfOpenPedal,
      SmuflGlyph.guitarClosePedal,
      SmuflGlyph.guitarLeftHandTapping,
      SmuflGlyph.guitarRightHandTapping,
      SmuflGlyph.guitarGolpe,
      SmuflGlyph.guitarFadeIn,
      SmuflGlyph.guitarFadeOut,
      SmuflGlyph.guitarVolumeSwell,
      SmuflGlyph.guitarStrumUp,
      SmuflGlyph.guitarStrumDown,
      SmuflGlyph.guitarBarreFull,
      SmuflGlyph.guitarBarreHalf,
      SmuflGlyph.guitarString10,
      SmuflGlyph.guitarString11,
      SmuflGlyph.guitarString12,
      SmuflGlyph.guitarString13,
    ],
    rangeStart: "\uE830",
    rangeEnd: "\uE84F",
  );

  /// Handbells.
  static const GlyphRange handbells = GlyphRange(
    description: "Handbells",
    glyphs: [
      SmuflGlyph.handbellsMartellato,
      SmuflGlyph.handbellsMartellatoLift,
      SmuflGlyph.handbellsHandMartellato,
      SmuflGlyph.handbellsMutedMartellato,
      SmuflGlyph.handbellsMalletBellSuspended,
      SmuflGlyph.handbellsMalletBellOnTable,
      SmuflGlyph.handbellsMalletLft,
      SmuflGlyph.handbellsPluckLift,
      SmuflGlyph.handbellsSwingUp,
      SmuflGlyph.handbellsSwingDown,
      SmuflGlyph.handbellsSwing,
      SmuflGlyph.handbellsEcho1,
      SmuflGlyph.handbellsEcho2,
      SmuflGlyph.handbellsGyro,
      SmuflGlyph.handbellsDamp3,
      SmuflGlyph.handbellsBelltree,
      SmuflGlyph.handbellsTableSingleBell,
      SmuflGlyph.handbellsTablePairBells,
    ],
    rangeStart: "\uE810",
    rangeEnd: "\uE82F",
  );

  /// Harp techniques.
  static const GlyphRange harpTechniques = GlyphRange(
    description: "Harp techniques",
    glyphs: [
      SmuflGlyph.harpPedalRaised,
      SmuflGlyph.harpPedalCentered,
      SmuflGlyph.harpPedalLowered,
      SmuflGlyph.harpPedalDivider,
      SmuflGlyph.harpSalzedoSlideWithSuppleness,
      SmuflGlyph.harpSalzedoOboicFlux,
      SmuflGlyph.harpSalzedoThunderEffect,
      SmuflGlyph.harpSalzedoWhistlingSounds,
      SmuflGlyph.harpSalzedoMetallicSounds,
      SmuflGlyph.harpSalzedoTamTamSounds,
      SmuflGlyph.harpSalzedoPlayUpperEnd,
      SmuflGlyph.harpSalzedoTimpanicSounds,
      SmuflGlyph.harpSalzedoMuffleTotally,
      SmuflGlyph.harpSalzedoFluidicSoundsLeft,
      SmuflGlyph.harpSalzedoFluidicSoundsRight,
      SmuflGlyph.harpMetalRod,
      SmuflGlyph.harpTuningKey,
      SmuflGlyph.harpTuningKeyHandle,
      SmuflGlyph.harpTuningKeyShank,
      SmuflGlyph.harpTuningKeyGlissando,
      SmuflGlyph.harpStringNoiseStem,
      SmuflGlyph.harpSalzedoAeolianAscending,
      SmuflGlyph.harpSalzedoAeolianDescending,
      SmuflGlyph.harpSalzedoDampLowStrings,
      SmuflGlyph.harpSalzedoDampBothHands,
      SmuflGlyph.harpSalzedoDampBelow,
      SmuflGlyph.harpSalzedoDampAbove,
      SmuflGlyph.harpSalzedoMetallicSoundsOneString,
      SmuflGlyph.harpSalzedoIsolatedSounds,
      SmuflGlyph.harpSalzedoSnareDrum,
    ],
    rangeStart: "\uE680",
    rangeEnd: "\uE69F",
  );

  /// Herculean Sagittal extension (very high precision) accidental diacritics.
  static const GlyphRange
      herculeanSagittalExtensionVeryHighPrecisionAccidentalDiacritics =
      GlyphRange(
    description:
        "Herculean Sagittal extension (very high precision) accidental diacritics",
    glyphs: [
      SmuflGlyph.accSagittalShaftUp,
      SmuflGlyph.accSagittalShaftDown,
      SmuflGlyph.accSagittalAcute,
      SmuflGlyph.accSagittalGrave,
    ],
    rangeStart: "\uE3F0",
    rangeEnd: "\uE3F3",
  );

  /// Holds and pauses.
  static const GlyphRange holdsAndPauses = GlyphRange(
    description: "Holds and pauses",
    glyphs: [
      SmuflGlyph.fermataAbove,
      SmuflGlyph.fermataBelow,
      SmuflGlyph.fermataVeryShortAbove,
      SmuflGlyph.fermataVeryShortBelow,
      SmuflGlyph.fermataShortAbove,
      SmuflGlyph.fermataShortBelow,
      SmuflGlyph.fermataLongAbove,
      SmuflGlyph.fermataLongBelow,
      SmuflGlyph.fermataVeryLongAbove,
      SmuflGlyph.fermataVeryLongBelow,
      SmuflGlyph.fermataLongHenzeAbove,
      SmuflGlyph.fermataLongHenzeBelow,
      SmuflGlyph.fermataShortHenzeAbove,
      SmuflGlyph.fermataShortHenzeBelow,
      SmuflGlyph.breathMarkComma,
      SmuflGlyph.breathMarkTick,
      SmuflGlyph.breathMarkUpbow,
      SmuflGlyph.caesura,
      SmuflGlyph.caesuraThick,
      SmuflGlyph.caesuraShort,
      SmuflGlyph.caesuraCurved,
      SmuflGlyph.breathMarkSalzedo,
      SmuflGlyph.curlewSign,
      SmuflGlyph.caesuraSingleStroke,
    ],
    rangeStart: "\uE4C0",
    rangeEnd: "\uE4DF",
  );

  /// Individual notes.
  static const GlyphRange individualNotes = GlyphRange(
    description: "Individual notes",
    glyphs: [
      SmuflGlyph.noteDoubleWhole,
      SmuflGlyph.noteDoubleWholeSquare,
      SmuflGlyph.noteWhole,
      SmuflGlyph.noteHalfUp,
      SmuflGlyph.noteHalfDown,
      SmuflGlyph.noteQuarterUp,
      SmuflGlyph.noteQuarterDown,
      SmuflGlyph.note8thUp,
      SmuflGlyph.note8thDown,
      SmuflGlyph.note16thUp,
      SmuflGlyph.note16thDown,
      SmuflGlyph.note32ndUp,
      SmuflGlyph.note32ndDown,
      SmuflGlyph.note64thUp,
      SmuflGlyph.note64thDown,
      SmuflGlyph.note128thUp,
      SmuflGlyph.note128thDown,
      SmuflGlyph.note256thUp,
      SmuflGlyph.note256thDown,
      SmuflGlyph.note512thUp,
      SmuflGlyph.note512thDown,
      SmuflGlyph.note1024thUp,
      SmuflGlyph.note1024thDown,
      SmuflGlyph.augmentationDot,
    ],
    rangeStart: "\uE1D0",
    rangeEnd: "\uE1EF",
  );

  /// Italian and Spanish Renaissance lute tablature.
  static const GlyphRange italianAndSpanishRenaissanceLuteTablature =
      GlyphRange(
    description: "Italian and Spanish Renaissance lute tablature",
    glyphs: [
      SmuflGlyph.luteItalianFret0,
      SmuflGlyph.luteItalianFret1,
      SmuflGlyph.luteItalianFret2,
      SmuflGlyph.luteItalianFret3,
      SmuflGlyph.luteItalianFret4,
      SmuflGlyph.luteItalianFret5,
      SmuflGlyph.luteItalianFret6,
      SmuflGlyph.luteItalianFret7,
      SmuflGlyph.luteItalianFret8,
      SmuflGlyph.luteItalianFret9,
      SmuflGlyph.luteItalianTempoFast,
      SmuflGlyph.luteItalianTempoSomewhatFast,
      SmuflGlyph.luteItalianTempoNeitherFastNorSlow,
      SmuflGlyph.luteItalianTempoSlow,
      SmuflGlyph.luteItalianTempoVerySlow,
      SmuflGlyph.luteItalianTimeTriple,
      SmuflGlyph.luteItalianClefFFaUt,
      SmuflGlyph.luteItalianClefCSolFaUt,
      SmuflGlyph.luteItalianTremolo,
      SmuflGlyph.luteItalianHoldNote,
      SmuflGlyph.luteItalianHoldFinger,
      SmuflGlyph.luteItalianReleaseFinger,
      SmuflGlyph.luteItalianVibrato,
    ],
    rangeStart: "\uEBE0",
    rangeEnd: "\uEBFF",
  );

  /// Johnston accidentals (just intonation).
  static const GlyphRange johnstonAccidentalsJustIntonation = GlyphRange(
    description: "Johnston accidentals (just intonation)",
    glyphs: [
      SmuflGlyph.accidentalJohnstonPlus,
      SmuflGlyph.accidentalJohnstonMinus,
      SmuflGlyph.accidentalJohnstonEl,
      SmuflGlyph.accidentalJohnstonSeven,
      SmuflGlyph.accidentalJohnstonUp,
      SmuflGlyph.accidentalJohnstonDown,
      SmuflGlyph.accidentalJohnston13,
      SmuflGlyph.accidentalJohnston31,
    ],
    rangeStart: "\uE2B0",
    rangeEnd: "\uE2BF",
  );

  /// Kahnotation.
  static const GlyphRange kahnotation = GlyphRange(
    description: "Kahnotation",
    glyphs: [
      SmuflGlyph.kahnStep,
      SmuflGlyph.kahnTap,
      SmuflGlyph.kahnHop,
      SmuflGlyph.kahnLeap,
      SmuflGlyph.kahnJumpTogether,
      SmuflGlyph.kahnJumpApart,
      SmuflGlyph.kahnBrushForward,
      SmuflGlyph.kahnBrushBackward,
      SmuflGlyph.kahnGraceTap,
      SmuflGlyph.kahnFlat,
      SmuflGlyph.kahnHeel,
      SmuflGlyph.kahnToe,
      SmuflGlyph.kahnKneeOutward,
      SmuflGlyph.kahnKneeInward,
      SmuflGlyph.kahnScrape,
      SmuflGlyph.kahnTrench,
      SmuflGlyph.kahnFleaHop,
      SmuflGlyph.kahnFleaTap,
      SmuflGlyph.kahnDrawStep,
      SmuflGlyph.kahnDrawTap,
      SmuflGlyph.kahnSlideStep,
      SmuflGlyph.kahnSlideTap,
      SmuflGlyph.kahnHeelDrop,
      SmuflGlyph.kahnToeDrop,
      SmuflGlyph.kahnClap,
      SmuflGlyph.kahnSnap,
      SmuflGlyph.kahnDoubleSnap,
      SmuflGlyph.kahnHeelClick,
      SmuflGlyph.kahnToeClick,
      SmuflGlyph.kahnLeftCross,
      SmuflGlyph.kahnRightCross,
      SmuflGlyph.kahnLeftCatch,
      SmuflGlyph.kahnRightCatch,
      SmuflGlyph.kahnLeftToeStrike,
      SmuflGlyph.kahnRightToeStrike,
      SmuflGlyph.kahnStamp,
      SmuflGlyph.kahnHeelStep,
      SmuflGlyph.kahnToeStep,
      SmuflGlyph.kahnBallChange,
      SmuflGlyph.kahnStepStamp,
      SmuflGlyph.kahnStampStamp,
      SmuflGlyph.kahnHeelChange,
      SmuflGlyph.kahnStomp,
      SmuflGlyph.kahnHeelTap,
      SmuflGlyph.kahnToeTap,
      SmuflGlyph.kahnBallDig,
      SmuflGlyph.kahnSlam,
      SmuflGlyph.kahnFlam,
      SmuflGlyph.kahnGraceTapHop,
      SmuflGlyph.kahnGraceTapChange,
      SmuflGlyph.kahnLeapFlatFoot,
      SmuflGlyph.kahnGraceTapStamp,
      SmuflGlyph.kahnLeapHeelClick,
      SmuflGlyph.kahnFlap,
      SmuflGlyph.kahnRip,
      SmuflGlyph.kahnFlapStep,
      SmuflGlyph.kahnBackFlap,
      SmuflGlyph.kahnSlap,
      SmuflGlyph.kahnBackRip,
      SmuflGlyph.kahnStompBrush,
      SmuflGlyph.kahnScuff,
      SmuflGlyph.kahnChug,
      SmuflGlyph.kahnPush,
      SmuflGlyph.kahnZink,
      SmuflGlyph.kahnRiff,
      SmuflGlyph.kahnBackRiff,
      SmuflGlyph.kahnBackChug,
      SmuflGlyph.kahnPull,
      SmuflGlyph.kahnZank,
      SmuflGlyph.kahnShuffle,
      SmuflGlyph.kahnScuffle,
      SmuflGlyph.kahnRiffle,
      SmuflGlyph.kahnRipple,
      SmuflGlyph.kahnWing,
      SmuflGlyph.kahnWingChange,
      SmuflGlyph.kahnDoubleWing,
      SmuflGlyph.kahnOverTheTop,
      SmuflGlyph.kahnOverTheTopTap,
      SmuflGlyph.kahnLeftFoot,
      SmuflGlyph.kahnRightFoot,
      SmuflGlyph.kahnLeftTurn,
      SmuflGlyph.kahnRightTurn,
    ],
    rangeStart: "\uEDA0",
    rangeEnd: "\uEDFF",
  );

  /// Keyboard techniques.
  static const GlyphRange keyboardTechniques = GlyphRange(
    description: "Keyboard techniques",
    glyphs: [
      SmuflGlyph.keyboardPedalPed,
      SmuflGlyph.keyboardPedalP,
      SmuflGlyph.keyboardPedalE,
      SmuflGlyph.keyboardPedalD,
      SmuflGlyph.keyboardPedalDot,
      SmuflGlyph.keyboardPedalUp,
      SmuflGlyph.keyboardPedalHalf,
      SmuflGlyph.keyboardPedalUpNotch,
      SmuflGlyph.keyboardPedalHyphen,
      SmuflGlyph.keyboardPedalSost,
      SmuflGlyph.keyboardPedalS,
      SmuflGlyph.keyboardPedalHalf2,
      SmuflGlyph.keyboardPedalHalf3,
      SmuflGlyph.keyboardPedalUpSpecial,
      SmuflGlyph.keyboardLeftPedalPictogram,
      SmuflGlyph.keyboardMiddlePedalPictogram,
      SmuflGlyph.keyboardRightPedalPictogram,
      SmuflGlyph.keyboardPedalHeel1,
      SmuflGlyph.keyboardPedalHeel2,
      SmuflGlyph.keyboardPedalHeel3,
      SmuflGlyph.keyboardPedalToe1,
      SmuflGlyph.keyboardPedalToe2,
      SmuflGlyph.keyboardPedalHeelToe,
      SmuflGlyph.keyboardPluckInside,
      SmuflGlyph.keyboardBebung2DotsAbove,
      SmuflGlyph.keyboardBebung2DotsBelow,
      SmuflGlyph.keyboardBebung3DotsAbove,
      SmuflGlyph.keyboardBebung3DotsBelow,
      SmuflGlyph.keyboardBebung4DotsAbove,
      SmuflGlyph.keyboardBebung4DotsBelow,
      SmuflGlyph.keyboardPlayWithRH,
      SmuflGlyph.keyboardPlayWithRHEnd,
      SmuflGlyph.keyboardPlayWithLH,
      SmuflGlyph.keyboardPlayWithLHEnd,
      SmuflGlyph.keyboardPedalHookStart,
      SmuflGlyph.keyboardPedalHookEnd,
      SmuflGlyph.keyboardPedalHeelToToe,
      SmuflGlyph.keyboardPedalToeToHeel,
      SmuflGlyph.keyboardPedalParensLeft,
      SmuflGlyph.keyboardPedalParensRight,
    ],
    rangeStart: "\uE650",
    rangeEnd: "\uE67F",
  );

  /// Kievan square notation.
  static const GlyphRange kievanSquareNotation = GlyphRange(
    description: "Kievan square notation",
    glyphs: [
      SmuflGlyph.kievanCClef,
      SmuflGlyph.kievanEndingSymbol,
      SmuflGlyph.kievanNoteReciting,
      SmuflGlyph.kievanNoteWhole,
      SmuflGlyph.kievanNoteWholeFinal,
      SmuflGlyph.kievanNoteHalfStaffLine,
      SmuflGlyph.kievanNoteHalfStaffSpace,
      SmuflGlyph.kievanNoteQuarterStemUp,
      SmuflGlyph.kievanNoteQuarterStemDown,
      SmuflGlyph.kievanNote8thStemUp,
      SmuflGlyph.kievanNote8thStemDown,
      SmuflGlyph.kievanNoteBeam,
      SmuflGlyph.kievanAugmentationDot,
      SmuflGlyph.kievanAccidentalSharp,
      SmuflGlyph.kievanAccidentalFlat,
    ],
    rangeStart: "\uEC30",
    rangeEnd: "\uEC3F",
  );

  /// Kodály hand signs.
  static const GlyphRange kodalyHandSigns = GlyphRange(
    description: "Kodály hand signs",
    glyphs: [
      SmuflGlyph.kodalyHandDo,
      SmuflGlyph.kodalyHandRe,
      SmuflGlyph.kodalyHandMi,
      SmuflGlyph.kodalyHandFa,
      SmuflGlyph.kodalyHandSo,
      SmuflGlyph.kodalyHandLa,
      SmuflGlyph.kodalyHandTi,
    ],
    rangeStart: "\uEC40",
    rangeEnd: "\uEC4F",
  );

  /// Lyrics.
  static const GlyphRange lyrics = GlyphRange(
    description: "Lyrics",
    glyphs: [
      SmuflGlyph.lyricsElisionNarrow,
      SmuflGlyph.lyricsElision,
      SmuflGlyph.lyricsElisionWide,
      SmuflGlyph.lyricsHyphenBaseline,
      SmuflGlyph.lyricsHyphenBaselineNonBreaking,
      SmuflGlyph.lyricsTextRepeat,
    ],
    rangeStart: "\uE550",
    rangeEnd: "\uE55F",
  );

  /// Magrathean Sagittal extension (insane precision) accidental diacritics.
  static const GlyphRange
      magratheanSagittalExtensionInsanePrecisionAccidentalDiacritics =
      GlyphRange(
    description:
        "Magrathean Sagittal extension (insane precision) accidental diacritics",
    glyphs: [
      SmuflGlyph.accSagittal1TinaUp,
      SmuflGlyph.accSagittal1TinaDown,
      SmuflGlyph.accSagittal2TinasUp,
      SmuflGlyph.accSagittal2TinasDown,
      SmuflGlyph.accSagittal3TinasUp,
      SmuflGlyph.accSagittal3TinasDown,
      SmuflGlyph.accSagittal4TinasUp,
      SmuflGlyph.accSagittal4TinasDown,
      SmuflGlyph.accSagittal5TinasUp,
      SmuflGlyph.accSagittal5TinasDown,
      SmuflGlyph.accSagittal6TinasUp,
      SmuflGlyph.accSagittal6TinasDown,
      SmuflGlyph.accSagittal7TinasUp,
      SmuflGlyph.accSagittal7TinasDown,
      SmuflGlyph.accSagittal8TinasUp,
      SmuflGlyph.accSagittal8TinasDown,
      SmuflGlyph.accSagittal9TinasUp,
      SmuflGlyph.accSagittal9TinasDown,
      SmuflGlyph.accSagittalFractionalTinaUp,
      SmuflGlyph.accSagittalFractionalTinaDown,
    ],
    rangeStart: "\uE3F8",
    rangeEnd: "\uE41F",
  );

  /// Medieval and Renaissance accidentals.
  static const GlyphRange medievalAndRenaissanceAccidentals = GlyphRange(
    description: "Medieval and Renaissance accidentals",
    glyphs: [
      SmuflGlyph.medRenFlatSoftB,
      SmuflGlyph.medRenFlatHardB,
      SmuflGlyph.medRenNatural,
      SmuflGlyph.medRenSharpCroix,
      SmuflGlyph.medRenFlatWithDot,
      SmuflGlyph.medRenNaturalWithCross,
    ],
    rangeStart: "\uE9E0",
    rangeEnd: "\uE9EF",
  );

  /// Medieval and Renaissance clefs.
  static const GlyphRange medievalAndRenaissanceClefs = GlyphRange(
    description: "Medieval and Renaissance clefs",
    glyphs: [
      SmuflGlyph.mensuralGclef,
      SmuflGlyph.mensuralGclefPetrucci,
      SmuflGlyph.chantFclef,
      SmuflGlyph.mensuralFclef,
      SmuflGlyph.mensuralFclefPetrucci,
      SmuflGlyph.mensuralCclef,
      SmuflGlyph.chantCclef,
      SmuflGlyph.mensuralCclefPetrucciPosLowest,
      SmuflGlyph.mensuralCclefPetrucciPosLow,
      SmuflGlyph.mensuralCclefPetrucciPosMiddle,
      SmuflGlyph.mensuralCclefPetrucciPosHigh,
      SmuflGlyph.mensuralCclefPetrucciPosHighest,
    ],
    rangeStart: "\uE900",
    rangeEnd: "\uE90F",
  );

  /// Medieval and Renaissance individual notes.
  static const GlyphRange medievalAndRenaissanceIndividualNotes = GlyphRange(
    description: "Medieval and Renaissance individual notes",
    glyphs: [
      SmuflGlyph.mensuralBlackMaxima,
      SmuflGlyph.mensuralBlackLonga,
      SmuflGlyph.mensuralBlackBrevis,
      SmuflGlyph.mensuralBlackSemibrevis,
      SmuflGlyph.mensuralBlackMinima,
      SmuflGlyph.mensuralBlackSemiminima,
      SmuflGlyph.mensuralBlackBrevisVoid,
      SmuflGlyph.mensuralBlackSemibrevisVoid,
      SmuflGlyph.mensuralBlackMinimaVoid,
      SmuflGlyph.mensuralBlackSemibrevisCaudata,
      SmuflGlyph.mensuralBlackDragma,
      SmuflGlyph.mensuralBlackSemibrevisOblique,
      SmuflGlyph.mensuralWhiteMaxima,
      SmuflGlyph.mensuralWhiteLonga,
      SmuflGlyph.mensuralWhiteBrevis,
      SmuflGlyph.mensuralWhiteMinima,
      SmuflGlyph.mensuralWhiteSemiminima,
      SmuflGlyph.mensuralWhiteFusa,
      SmuflGlyph.mensuralWhiteSemibrevis,
    ],
    rangeStart: "\uE950",
    rangeEnd: "\uE96F",
  );

  /// Medieval and Renaissance miscellany.
  static const GlyphRange medievalAndRenaissanceMiscellany = GlyphRange(
    description: "Medieval and Renaissance miscellany",
    glyphs: [
      SmuflGlyph.mensuralSignumUp,
      SmuflGlyph.mensuralSignumDown,
      SmuflGlyph.mensuralCustosUp,
      SmuflGlyph.mensuralCustosDown,
      SmuflGlyph.chantCustosStemUpPosLowest,
      SmuflGlyph.chantCustosStemUpPosLow,
      SmuflGlyph.chantCustosStemUpPosMiddle,
      SmuflGlyph.chantCustosStemDownPosMiddle,
      SmuflGlyph.chantCustosStemDownPosHigh,
      SmuflGlyph.chantCustosStemDownPosHighest,
      SmuflGlyph.mensuralCustosCheckmark,
      SmuflGlyph.mensuralCustosTurn,
      SmuflGlyph.mensuralColorationStartSquare,
      SmuflGlyph.mensuralColorationEndSquare,
      SmuflGlyph.mensuralColorationStartRound,
      SmuflGlyph.mensuralColorationEndRound,
      SmuflGlyph.mensuralAlterationSign,
    ],
    rangeStart: "\uEA00",
    rangeEnd: "\uEA1F",
  );

  /// Medieval and Renaissance noteheads and stems.
  static const GlyphRange medievalAndRenaissanceNoteheadsAndStems = GlyphRange(
    description: "Medieval and Renaissance noteheads and stems",
    glyphs: [
      SmuflGlyph.mensuralNoteheadMaximaBlack,
      SmuflGlyph.mensuralNoteheadMaximaVoid,
      SmuflGlyph.mensuralNoteheadMaximaBlackVoid,
      SmuflGlyph.mensuralNoteheadMaximaWhite,
      SmuflGlyph.mensuralNoteheadLongaBlack,
      SmuflGlyph.mensuralNoteheadLongaVoid,
      SmuflGlyph.mensuralNoteheadLongaBlackVoid,
      SmuflGlyph.mensuralNoteheadLongaWhite,
      SmuflGlyph.mensuralNoteheadSemibrevisBlack,
      SmuflGlyph.mensuralNoteheadSemibrevisVoid,
      SmuflGlyph.mensuralNoteheadSemibrevisBlackVoid,
      SmuflGlyph.mensuralNoteheadSemibrevisBlackVoidTurned,
      SmuflGlyph.mensuralNoteheadMinimaWhite,
      SmuflGlyph.mensuralNoteheadSemiminimaWhite,
      SmuflGlyph.mensuralCombStemUp,
      SmuflGlyph.mensuralCombStemDown,
      SmuflGlyph.mensuralCombStemDiagonal,
      SmuflGlyph.mensuralCombStemUpFlagRight,
      SmuflGlyph.mensuralCombStemDownFlagRight,
      SmuflGlyph.mensuralCombStemUpFlagLeft,
      SmuflGlyph.mensuralCombStemDownFlagLeft,
      SmuflGlyph.mensuralCombStemUpFlagFlared,
      SmuflGlyph.mensuralCombStemDownFlagFlared,
      SmuflGlyph.mensuralCombStemUpFlagExtended,
      SmuflGlyph.mensuralCombStemDownFlagExtended,
      SmuflGlyph.mensuralCombStemUpFlagSemiminima,
      SmuflGlyph.mensuralCombStemDownFlagSemiminima,
      SmuflGlyph.mensuralCombStemUpFlagFusa,
      SmuflGlyph.mensuralCombStemDownFlagFusa,
    ],
    rangeStart: "\uE930",
    rangeEnd: "\uE94F",
  );

  /// Medieval and Renaissance oblique forms.
  static const GlyphRange medievalAndRenaissanceObliqueForms = GlyphRange(
    description: "Medieval and Renaissance oblique forms",
    glyphs: [
      SmuflGlyph.mensuralObliqueAsc2ndBlack,
      SmuflGlyph.mensuralObliqueAsc2ndVoid,
      SmuflGlyph.mensuralObliqueAsc2ndBlackVoid,
      SmuflGlyph.mensuralObliqueAsc2ndWhite,
      SmuflGlyph.mensuralObliqueAsc3rdBlack,
      SmuflGlyph.mensuralObliqueAsc3rdVoid,
      SmuflGlyph.mensuralObliqueAsc3rdBlackVoid,
      SmuflGlyph.mensuralObliqueAsc3rdWhite,
      SmuflGlyph.mensuralObliqueAsc4thBlack,
      SmuflGlyph.mensuralObliqueAsc4thVoid,
      SmuflGlyph.mensuralObliqueAsc4thBlackVoid,
      SmuflGlyph.mensuralObliqueAsc4thWhite,
      SmuflGlyph.mensuralObliqueAsc5thBlack,
      SmuflGlyph.mensuralObliqueAsc5thVoid,
      SmuflGlyph.mensuralObliqueAsc5thBlackVoid,
      SmuflGlyph.mensuralObliqueAsc5thWhite,
      SmuflGlyph.mensuralObliqueDesc2ndBlack,
      SmuflGlyph.mensuralObliqueDesc2ndVoid,
      SmuflGlyph.mensuralObliqueDesc2ndBlackVoid,
      SmuflGlyph.mensuralObliqueDesc2ndWhite,
      SmuflGlyph.mensuralObliqueDesc3rdBlack,
      SmuflGlyph.mensuralObliqueDesc3rdVoid,
      SmuflGlyph.mensuralObliqueDesc3rdBlackVoid,
      SmuflGlyph.mensuralObliqueDesc3rdWhite,
      SmuflGlyph.mensuralObliqueDesc4thBlack,
      SmuflGlyph.mensuralObliqueDesc4thVoid,
      SmuflGlyph.mensuralObliqueDesc4thBlackVoid,
      SmuflGlyph.mensuralObliqueDesc4thWhite,
      SmuflGlyph.mensuralObliqueDesc5thBlack,
      SmuflGlyph.mensuralObliqueDesc5thVoid,
      SmuflGlyph.mensuralObliqueDesc5thBlackVoid,
      SmuflGlyph.mensuralObliqueDesc5thWhite,
    ],
    rangeStart: "\uE970",
    rangeEnd: "\uE98F",
  );

  /// Medieval and Renaissance plainchant articulations.
  static const GlyphRange medievalAndRenaissancePlainchantArticulations =
      GlyphRange(
    description: "Medieval and Renaissance plainchant articulations",
    glyphs: [
      SmuflGlyph.chantIctusAbove,
      SmuflGlyph.chantIctusBelow,
      SmuflGlyph.chantCirculusAbove,
      SmuflGlyph.chantCirculusBelow,
      SmuflGlyph.chantSemicirculusAbove,
      SmuflGlyph.chantSemicirculusBelow,
      SmuflGlyph.chantAccentusAbove,
      SmuflGlyph.chantAccentusBelow,
      SmuflGlyph.chantEpisema,
      SmuflGlyph.chantAugmentum,
    ],
    rangeStart: "\uE9D0",
    rangeEnd: "\uE9DF",
  );

  /// Medieval and Renaissance plainchant multiple-note forms.
  static const GlyphRange medievalAndRenaissancePlainchantMultipleNoteForms =
      GlyphRange(
    description: "Medieval and Renaissance plainchant multiple-note forms",
    glyphs: [
      SmuflGlyph.chantPodatusLower,
      SmuflGlyph.chantPodatusUpper,
      SmuflGlyph.chantDeminutumUpper,
      SmuflGlyph.chantDeminutumLower,
      SmuflGlyph.chantEntryLineAsc2nd,
      SmuflGlyph.chantEntryLineAsc3rd,
      SmuflGlyph.chantEntryLineAsc4th,
      SmuflGlyph.chantEntryLineAsc5th,
      SmuflGlyph.chantEntryLineAsc6th,
      SmuflGlyph.chantLigaturaDesc2nd,
      SmuflGlyph.chantLigaturaDesc3rd,
      SmuflGlyph.chantLigaturaDesc4th,
      SmuflGlyph.chantLigaturaDesc5th,
      SmuflGlyph.chantConnectingLineAsc2nd,
      SmuflGlyph.chantConnectingLineAsc3rd,
      SmuflGlyph.chantConnectingLineAsc4th,
      SmuflGlyph.chantConnectingLineAsc5th,
      SmuflGlyph.chantConnectingLineAsc6th,
      SmuflGlyph.chantStrophicusLiquescens2nd,
      SmuflGlyph.chantStrophicusLiquescens3rd,
      SmuflGlyph.chantStrophicusLiquescens4th,
      SmuflGlyph.chantStrophicusLiquescens5th,
    ],
    rangeStart: "\uE9B0",
    rangeEnd: "\uE9CF",
  );

  /// Medieval and Renaissance plainchant single-note forms.
  static const GlyphRange medievalAndRenaissancePlainchantSingleNoteForms =
      GlyphRange(
    description: "Medieval and Renaissance plainchant single-note forms",
    glyphs: [
      SmuflGlyph.chantPunctum,
      SmuflGlyph.chantPunctumInclinatum,
      SmuflGlyph.chantPunctumInclinatumAuctum,
      SmuflGlyph.chantPunctumInclinatumDeminutum,
      SmuflGlyph.chantAuctumAsc,
      SmuflGlyph.chantAuctumDesc,
      SmuflGlyph.chantPunctumVirga,
      SmuflGlyph.chantPunctumVirgaReversed,
      SmuflGlyph.chantPunctumCavum,
      SmuflGlyph.chantPunctumLinea,
      SmuflGlyph.chantPunctumLineaCavum,
      SmuflGlyph.chantQuilisma,
      SmuflGlyph.chantOriscusAscending,
      SmuflGlyph.chantOriscusDescending,
      SmuflGlyph.chantOriscusLiquescens,
      SmuflGlyph.chantStrophicus,
      SmuflGlyph.chantStrophicusAuctus,
      SmuflGlyph.chantPunctumDeminutum,
    ],
    rangeStart: "\uE990",
    rangeEnd: "\uE9AF",
  );

  /// Medieval and Renaissance prolations.
  static const GlyphRange medievalAndRenaissanceProlations = GlyphRange(
    description: "Medieval and Renaissance prolations",
    glyphs: [
      SmuflGlyph.mensuralProlation1,
      SmuflGlyph.mensuralProlation2,
      SmuflGlyph.mensuralProlation3,
      SmuflGlyph.mensuralProlation4,
      SmuflGlyph.mensuralProlation5,
      SmuflGlyph.mensuralProlation6,
      SmuflGlyph.mensuralProlation7,
      SmuflGlyph.mensuralProlation8,
      SmuflGlyph.mensuralProlation9,
      SmuflGlyph.mensuralProlation10,
      SmuflGlyph.mensuralProlation11,
      SmuflGlyph.mensuralProportionTempusPerfectum,
      SmuflGlyph.mensuralProportionProportioDupla1,
      SmuflGlyph.mensuralProportionProportioDupla2,
      SmuflGlyph.mensuralProportionProportioTripla,
      SmuflGlyph.mensuralProportionProportioQuadrupla,
      SmuflGlyph.mensuralProlationCombiningDot,
      SmuflGlyph.mensuralProlationCombiningTwoDots,
      SmuflGlyph.mensuralProlationCombiningThreeDots,
      SmuflGlyph.mensuralProlationCombiningThreeDotsTri,
      SmuflGlyph.mensuralProlationCombiningDotVoid,
      SmuflGlyph.mensuralProlationCombiningStroke,
      SmuflGlyph.mensuralProportion1,
      SmuflGlyph.mensuralProportion2,
      SmuflGlyph.mensuralProportion3,
      SmuflGlyph.mensuralProportion4,
      SmuflGlyph.mensuralProportionMinor,
      SmuflGlyph.mensuralProportionMajor,
      SmuflGlyph.mensuralModusPerfectumVert,
      SmuflGlyph.mensuralModusImperfectumVert,
      SmuflGlyph.mensuralTempusPerfectumHoriz,
      SmuflGlyph.mensuralTempusImperfectumHoriz,
    ],
    rangeStart: "\uE910",
    rangeEnd: "\uE92F",
  );

  /// Medieval and Renaissance prolations supplement.
  static const GlyphRange medievalAndRenaissanceProlationsSupplement =
      GlyphRange(
    description: "Medieval and Renaissance prolations supplement",
    glyphs: [
      SmuflGlyph.mensuralProportion5,
      SmuflGlyph.mensuralProportion6,
      SmuflGlyph.mensuralProportion7,
      SmuflGlyph.mensuralProportion8,
      SmuflGlyph.mensuralProportion9,
    ],
    rangeStart: "\uEE90",
    rangeEnd: "\uEE9F",
  );

  /// Medieval and Renaissance rests.
  static const GlyphRange medievalAndRenaissanceRests = GlyphRange(
    description: "Medieval and Renaissance rests",
    glyphs: [
      SmuflGlyph.mensuralRestMaxima,
      SmuflGlyph.mensuralRestLongaPerfecta,
      SmuflGlyph.mensuralRestLongaImperfecta,
      SmuflGlyph.mensuralRestBrevis,
      SmuflGlyph.mensuralRestSemibrevis,
      SmuflGlyph.mensuralRestMinima,
      SmuflGlyph.mensuralRestSemiminima,
      SmuflGlyph.mensuralRestFusa,
      SmuflGlyph.mensuralRestSemifusa,
    ],
    rangeStart: "\uE9F0",
    rangeEnd: "\uE9FF",
  );

  /// Medieval and Renaissance staves.
  static const GlyphRange medievalAndRenaissanceStaves = GlyphRange(
    description: "Medieval and Renaissance staves",
    glyphs: [
      SmuflGlyph.chantStaff,
      SmuflGlyph.chantStaffWide,
      SmuflGlyph.chantStaffNarrow,
      SmuflGlyph.chantDivisioMinima,
      SmuflGlyph.chantDivisioMaior,
      SmuflGlyph.chantDivisioMaxima,
      SmuflGlyph.chantDivisioFinalis,
      SmuflGlyph.chantVirgula,
      SmuflGlyph.chantCaesura,
    ],
    rangeStart: "\uE8F0",
    rangeEnd: "\uE8FF",
  );

  /// Medieval and Renaissance symbols in CMN.
  static const GlyphRange medievalAndRenaissanceSymbolsInCmn = GlyphRange(
    description: "Medieval and Renaissance symbols in CMN",
    glyphs: [
      SmuflGlyph.ornamentQuilisma,
      SmuflGlyph.ornamentOriscus,
      SmuflGlyph.medRenLiquescenceCMN,
      SmuflGlyph.medRenPlicaCMN,
      SmuflGlyph.medRenGClefCMN,
      SmuflGlyph.medRenPunctumCMN,
      SmuflGlyph.medRenLiquescentAscCMN,
      SmuflGlyph.medRenLiquescentDescCMN,
      SmuflGlyph.medRenQuilismaCMN,
      SmuflGlyph.medRenStrophicusCMN,
      SmuflGlyph.medRenOriscusCMN,
    ],
    rangeStart: "\uEA20",
    rangeEnd: "\uEA2F",
  );

  /// Metallic struck percussion pictograms.
  static const GlyphRange metallicStruckPercussionPictograms = GlyphRange(
    description: "Metallic struck percussion pictograms",
    glyphs: [
      SmuflGlyph.pictTriangle,
      SmuflGlyph.pictAnvil,
    ],
    rangeStart: "\uE700",
    rangeEnd: "\uE70F",
  );

  /// Metronome marks.
  static const GlyphRange metronomeMarks = GlyphRange(
    description: "Metronome marks",
    glyphs: [
      SmuflGlyph.metNoteDoubleWhole,
      SmuflGlyph.metNoteDoubleWholeSquare,
      SmuflGlyph.metNoteWhole,
      SmuflGlyph.metNoteHalfUp,
      SmuflGlyph.metNoteHalfDown,
      SmuflGlyph.metNoteQuarterUp,
      SmuflGlyph.metNoteQuarterDown,
      SmuflGlyph.metNote8thUp,
      SmuflGlyph.metNote8thDown,
      SmuflGlyph.metNote16thUp,
      SmuflGlyph.metNote16thDown,
      SmuflGlyph.metNote32ndUp,
      SmuflGlyph.metNote32ndDown,
      SmuflGlyph.metNote64thUp,
      SmuflGlyph.metNote64thDown,
      SmuflGlyph.metNote128thUp,
      SmuflGlyph.metNote128thDown,
      SmuflGlyph.metNote256thUp,
      SmuflGlyph.metNote256thDown,
      SmuflGlyph.metNote512thUp,
      SmuflGlyph.metNote512thDown,
      SmuflGlyph.metNote1024thUp,
      SmuflGlyph.metNote1024thDown,
      SmuflGlyph.metAugmentationDot,
    ],
    rangeStart: "\uECA0",
    rangeEnd: "\uECBF",
  );

  /// Miscellaneous percussion instrument pictograms.
  static const GlyphRange miscellaneousPercussionInstrumentPictograms =
      GlyphRange(
    description: "Miscellaneous percussion instrument pictograms",
    glyphs: [
      SmuflGlyph.pictPistolShot,
      SmuflGlyph.pictCannon,
      SmuflGlyph.pictSandpaperBlocks,
      SmuflGlyph.pictLionsRoar,
      SmuflGlyph.pictGlassHarp,
      SmuflGlyph.pictGlassHarmonica,
      SmuflGlyph.pictMusicalSaw,
      SmuflGlyph.pictJawHarp,
    ],
    rangeStart: "\uE760",
    rangeEnd: "\uE76F",
  );

  /// Miscellaneous symbols.
  static const GlyphRange miscellaneousSymbols = GlyphRange(
    description: "Miscellaneous symbols",
    glyphs: [
      SmuflGlyph.miscDoNotPhotocopy,
      SmuflGlyph.miscDoNotCopy,
      SmuflGlyph.miscEyeglasses,
      SmuflGlyph.metricModulationArrowLeft,
      SmuflGlyph.metricModulationArrowRight,
    ],
    rangeStart: "\uEC60",
    rangeEnd: "\uEC7F",
  );

  /// Multi-segment lines.
  static const GlyphRange multiSegmentLines = GlyphRange(
    description: "Multi-segment lines",
    glyphs: [
      SmuflGlyph.wiggleTrillFastest,
      SmuflGlyph.wiggleTrillFasterStill,
      SmuflGlyph.wiggleTrillFaster,
      SmuflGlyph.wiggleTrillFast,
      SmuflGlyph.wiggleTrill,
      SmuflGlyph.wiggleTrillSlow,
      SmuflGlyph.wiggleTrillSlower,
      SmuflGlyph.wiggleTrillSlowerStill,
      SmuflGlyph.wiggleTrillSlowest,
      SmuflGlyph.wiggleArpeggiatoUp,
      SmuflGlyph.wiggleArpeggiatoDown,
      SmuflGlyph.wiggleArpeggiatoUpSwash,
      SmuflGlyph.wiggleArpeggiatoDownSwash,
      SmuflGlyph.wiggleArpeggiatoUpArrow,
      SmuflGlyph.wiggleArpeggiatoDownArrow,
      SmuflGlyph.wiggleGlissando,
      SmuflGlyph.wiggleVibrato,
      SmuflGlyph.wiggleVibratoWide,
      SmuflGlyph.guitarVibratoStroke,
      SmuflGlyph.guitarWideVibratoStroke,
      SmuflGlyph.wiggleWavyNarrow,
      SmuflGlyph.wiggleWavy,
      SmuflGlyph.wiggleWavyWide,
      SmuflGlyph.wiggleSquareWaveNarrow,
      SmuflGlyph.wiggleSquareWave,
      SmuflGlyph.wiggleSquareWaveWide,
      SmuflGlyph.wiggleSawtoothNarrow,
      SmuflGlyph.wiggleSawtooth,
      SmuflGlyph.wiggleSawtoothWide,
      SmuflGlyph.wiggleGlissandoGroup1,
      SmuflGlyph.wiggleGlissandoGroup2,
      SmuflGlyph.wiggleGlissandoGroup3,
      SmuflGlyph.wiggleCircularConstant,
      SmuflGlyph.wiggleCircularConstantFlipped,
      SmuflGlyph.wiggleCircularConstantLarge,
      SmuflGlyph.wiggleCircularConstantFlippedLarge,
      SmuflGlyph.wiggleCircularStart,
      SmuflGlyph.wiggleCircularLargest,
      SmuflGlyph.wiggleCircularLargerStill,
      SmuflGlyph.wiggleCircularLarger,
      SmuflGlyph.wiggleCircularLarge,
      SmuflGlyph.wiggleCircular,
      SmuflGlyph.wiggleCircularSmall,
      SmuflGlyph.wiggleCircularEnd,
      SmuflGlyph.wiggleVibratoStart,
      SmuflGlyph.wiggleVibratoSmallestFastest,
      SmuflGlyph.wiggleVibratoSmallestFasterStill,
      SmuflGlyph.wiggleVibratoSmallestFaster,
      SmuflGlyph.wiggleVibratoSmallestFast,
      SmuflGlyph.wiggleVibratoSmallestSlow,
      SmuflGlyph.wiggleVibratoSmallestSlower,
      SmuflGlyph.wiggleVibratoSmallestSlowest,
      SmuflGlyph.wiggleVibratoSmallFastest,
      SmuflGlyph.wiggleVibratoSmallFasterStill,
      SmuflGlyph.wiggleVibratoSmallFaster,
      SmuflGlyph.wiggleVibratoSmallFast,
      SmuflGlyph.wiggleVibratoSmallSlow,
      SmuflGlyph.wiggleVibratoSmallSlower,
      SmuflGlyph.wiggleVibratoSmallSlowest,
      SmuflGlyph.wiggleVibratoMediumFastest,
      SmuflGlyph.wiggleVibratoMediumFasterStill,
      SmuflGlyph.wiggleVibratoMediumFaster,
      SmuflGlyph.wiggleVibratoMediumFast,
      SmuflGlyph.wiggleVibratoMediumSlow,
      SmuflGlyph.wiggleVIbratoMediumSlower,
      SmuflGlyph.wiggleVibratoMediumSlowest,
      SmuflGlyph.wiggleVibratoLargeFastest,
      SmuflGlyph.wiggleVibratoLargeFasterStill,
      SmuflGlyph.wiggleVibratoLargeFaster,
      SmuflGlyph.wiggleVibratoLargeFast,
      SmuflGlyph.wiggleVibratoLargeSlow,
      SmuflGlyph.wiggleVibratoLargeSlower,
      SmuflGlyph.wiggleVibratoLargeSlowest,
      SmuflGlyph.wiggleVibratoLargestFastest,
      SmuflGlyph.wiggleVibratoLargestFasterStill,
      SmuflGlyph.wiggleVibratoLargestFaster,
      SmuflGlyph.wiggleVibratoLargestFast,
      SmuflGlyph.wiggleVibratoLargestSlow,
      SmuflGlyph.wiggleVIbratoLargestSlower,
      SmuflGlyph.wiggleVibratoLargestSlowest,
      SmuflGlyph.wiggleRandom1,
      SmuflGlyph.wiggleRandom2,
      SmuflGlyph.wiggleRandom3,
      SmuflGlyph.wiggleRandom4,
      SmuflGlyph.beamAccelRit1,
      SmuflGlyph.beamAccelRit2,
      SmuflGlyph.beamAccelRit3,
      SmuflGlyph.beamAccelRit4,
      SmuflGlyph.beamAccelRit5,
      SmuflGlyph.beamAccelRit6,
      SmuflGlyph.beamAccelRit7,
      SmuflGlyph.beamAccelRit8,
      SmuflGlyph.beamAccelRit9,
      SmuflGlyph.beamAccelRit10,
      SmuflGlyph.beamAccelRit11,
      SmuflGlyph.beamAccelRit12,
      SmuflGlyph.beamAccelRit13,
      SmuflGlyph.beamAccelRit14,
      SmuflGlyph.beamAccelRit15,
      SmuflGlyph.beamAccelRitFinal,
    ],
    rangeStart: "\uEAA0",
    rangeEnd: "\uEB0F",
  );

  /// Note clusters.
  static const GlyphRange noteClusters = GlyphRange(
    description: "Note clusters",
    glyphs: [
      SmuflGlyph.noteheadClusterSquareWhite,
      SmuflGlyph.noteheadClusterSquareBlack,
      SmuflGlyph.noteheadClusterRoundWhite,
      SmuflGlyph.noteheadClusterRoundBlack,
      SmuflGlyph.noteheadClusterDoubleWhole2nd,
      SmuflGlyph.noteheadClusterWhole2nd,
      SmuflGlyph.noteheadClusterHalf2nd,
      SmuflGlyph.noteheadClusterQuarter2nd,
      SmuflGlyph.noteheadClusterDoubleWhole3rd,
      SmuflGlyph.noteheadClusterWhole3rd,
      SmuflGlyph.noteheadClusterHalf3rd,
      SmuflGlyph.noteheadClusterQuarter3rd,
      SmuflGlyph.noteheadClusterDoubleWholeTop,
      SmuflGlyph.noteheadClusterDoubleWholeMiddle,
      SmuflGlyph.noteheadClusterDoubleWholeBottom,
      SmuflGlyph.noteheadClusterWholeTop,
      SmuflGlyph.noteheadClusterWholeMiddle,
      SmuflGlyph.noteheadClusterWholeBottom,
      SmuflGlyph.noteheadClusterHalfTop,
      SmuflGlyph.noteheadClusterHalfMiddle,
      SmuflGlyph.noteheadClusterHalfBottom,
      SmuflGlyph.noteheadClusterQuarterTop,
      SmuflGlyph.noteheadClusterQuarterMiddle,
      SmuflGlyph.noteheadClusterQuarterBottom,
      SmuflGlyph.noteheadDiamondClusterWhite2nd,
      SmuflGlyph.noteheadDiamondClusterBlack2nd,
      SmuflGlyph.noteheadDiamondClusterWhite3rd,
      SmuflGlyph.noteheadDiamondClusterBlack3rd,
      SmuflGlyph.noteheadDiamondClusterWhiteTop,
      SmuflGlyph.noteheadDiamondClusterWhiteMiddle,
      SmuflGlyph.noteheadDiamondClusterWhiteBottom,
      SmuflGlyph.noteheadDiamondClusterBlackTop,
      SmuflGlyph.noteheadDiamondClusterBlackMiddle,
      SmuflGlyph.noteheadDiamondClusterBlackBottom,
      SmuflGlyph.noteheadRectangularClusterBlackTop,
      SmuflGlyph.noteheadRectangularClusterBlackMiddle,
      SmuflGlyph.noteheadRectangularClusterBlackBottom,
      SmuflGlyph.noteheadRectangularClusterWhiteTop,
      SmuflGlyph.noteheadRectangularClusterWhiteMiddle,
      SmuflGlyph.noteheadRectangularClusterWhiteBottom,
    ],
    rangeStart: "\uE120",
    rangeEnd: "\uE14F",
  );

  /// Note name noteheads.
  static const GlyphRange noteNameNoteheads = GlyphRange(
    description: "Note name noteheads",
    glyphs: [
      SmuflGlyph.noteDoWhole,
      SmuflGlyph.noteReWhole,
      SmuflGlyph.noteMiWhole,
      SmuflGlyph.noteFaWhole,
      SmuflGlyph.noteSoWhole,
      SmuflGlyph.noteLaWhole,
      SmuflGlyph.noteTiWhole,
      SmuflGlyph.noteSiWhole,
      SmuflGlyph.noteDoHalf,
      SmuflGlyph.noteReHalf,
      SmuflGlyph.noteMiHalf,
      SmuflGlyph.noteFaHalf,
      SmuflGlyph.noteSoHalf,
      SmuflGlyph.noteLaHalf,
      SmuflGlyph.noteTiHalf,
      SmuflGlyph.noteSiHalf,
      SmuflGlyph.noteDoBlack,
      SmuflGlyph.noteReBlack,
      SmuflGlyph.noteMiBlack,
      SmuflGlyph.noteFaBlack,
      SmuflGlyph.noteSoBlack,
      SmuflGlyph.noteLaBlack,
      SmuflGlyph.noteTiBlack,
      SmuflGlyph.noteSiBlack,
      SmuflGlyph.noteAFlatWhole,
      SmuflGlyph.noteAWhole,
      SmuflGlyph.noteASharpWhole,
      SmuflGlyph.noteBFlatWhole,
      SmuflGlyph.noteBWhole,
      SmuflGlyph.noteBSharpWhole,
      SmuflGlyph.noteCFlatWhole,
      SmuflGlyph.noteCWhole,
      SmuflGlyph.noteCSharpWhole,
      SmuflGlyph.noteDFlatWhole,
      SmuflGlyph.noteDWhole,
      SmuflGlyph.noteDSharpWhole,
      SmuflGlyph.noteEFlatWhole,
      SmuflGlyph.noteEWhole,
      SmuflGlyph.noteESharpWhole,
      SmuflGlyph.noteFFlatWhole,
      SmuflGlyph.noteFWhole,
      SmuflGlyph.noteFSharpWhole,
      SmuflGlyph.noteGFlatWhole,
      SmuflGlyph.noteGWhole,
      SmuflGlyph.noteGSharpWhole,
      SmuflGlyph.noteHWhole,
      SmuflGlyph.noteHSharpWhole,
      SmuflGlyph.noteAFlatHalf,
      SmuflGlyph.noteAHalf,
      SmuflGlyph.noteASharpHalf,
      SmuflGlyph.noteBFlatHalf,
      SmuflGlyph.noteBHalf,
      SmuflGlyph.noteBSharpHalf,
      SmuflGlyph.noteCFlatHalf,
      SmuflGlyph.noteCHalf,
      SmuflGlyph.noteCSharpHalf,
      SmuflGlyph.noteDFlatHalf,
      SmuflGlyph.noteDHalf,
      SmuflGlyph.noteDSharpHalf,
      SmuflGlyph.noteEFlatHalf,
      SmuflGlyph.noteEHalf,
      SmuflGlyph.noteESharpHalf,
      SmuflGlyph.noteFFlatHalf,
      SmuflGlyph.noteFHalf,
      SmuflGlyph.noteFSharpHalf,
      SmuflGlyph.noteGFlatHalf,
      SmuflGlyph.noteGHalf,
      SmuflGlyph.noteGSharpHalf,
      SmuflGlyph.noteHHalf,
      SmuflGlyph.noteHSharpHalf,
      SmuflGlyph.noteAFlatBlack,
      SmuflGlyph.noteABlack,
      SmuflGlyph.noteASharpBlack,
      SmuflGlyph.noteBFlatBlack,
      SmuflGlyph.noteBBlack,
      SmuflGlyph.noteBSharpBlack,
      SmuflGlyph.noteCFlatBlack,
      SmuflGlyph.noteCBlack,
      SmuflGlyph.noteCSharpBlack,
      SmuflGlyph.noteDFlatBlack,
      SmuflGlyph.noteDBlack,
      SmuflGlyph.noteDSharpBlack,
      SmuflGlyph.noteEFlatBlack,
      SmuflGlyph.noteEBlack,
      SmuflGlyph.noteESharpBlack,
      SmuflGlyph.noteFFlatBlack,
      SmuflGlyph.noteFBlack,
      SmuflGlyph.noteFSharpBlack,
      SmuflGlyph.noteGFlatBlack,
      SmuflGlyph.noteGBlack,
      SmuflGlyph.noteGSharpBlack,
      SmuflGlyph.noteHBlack,
      SmuflGlyph.noteHSharpBlack,
      SmuflGlyph.noteEmptyWhole,
      SmuflGlyph.noteEmptyHalf,
      SmuflGlyph.noteEmptyBlack,
    ],
    rangeStart: "\uE150",
    rangeEnd: "\uE1AF",
  );

  /// Note name noteheads supplement.
  static const GlyphRange noteNameNoteheadsSupplement = GlyphRange(
    description: "Note name noteheads supplement",
    glyphs: [
      SmuflGlyph.noteDiWhole,
      SmuflGlyph.noteRiWhole,
      SmuflGlyph.noteRaWhole,
      SmuflGlyph.noteMeWhole,
      SmuflGlyph.noteFiWhole,
      SmuflGlyph.noteSeWhole,
      SmuflGlyph.noteLiWhole,
      SmuflGlyph.noteLeWhole,
      SmuflGlyph.noteTeWhole,
      SmuflGlyph.noteDiHalf,
      SmuflGlyph.noteRiHalf,
      SmuflGlyph.noteRaHalf,
      SmuflGlyph.noteMeHalf,
      SmuflGlyph.noteFiHalf,
      SmuflGlyph.noteSeHalf,
      SmuflGlyph.noteLiHalf,
      SmuflGlyph.noteLeHalf,
      SmuflGlyph.noteTeHalf,
      SmuflGlyph.noteDiBlack,
      SmuflGlyph.noteRiBlack,
      SmuflGlyph.noteRaBlack,
      SmuflGlyph.noteMeBlack,
      SmuflGlyph.noteFiBlack,
      SmuflGlyph.noteSeBlack,
      SmuflGlyph.noteLiBlack,
      SmuflGlyph.noteLeBlack,
      SmuflGlyph.noteTeBlack,
    ],
    rangeStart: "\uEEE0",
    rangeEnd: "\uEEFF",
  );

  /// Noteheads.
  static const GlyphRange noteheads = GlyphRange(
    description: "Noteheads",
    glyphs: [
      SmuflGlyph.noteheadDoubleWhole,
      SmuflGlyph.noteheadDoubleWholeSquare,
      SmuflGlyph.noteheadWhole,
      SmuflGlyph.noteheadHalf,
      SmuflGlyph.noteheadBlack,
      SmuflGlyph.noteheadNull,
      SmuflGlyph.noteheadXDoubleWhole,
      SmuflGlyph.noteheadXWhole,
      SmuflGlyph.noteheadXHalf,
      SmuflGlyph.noteheadXBlack,
      SmuflGlyph.noteheadXOrnate,
      SmuflGlyph.noteheadXOrnateEllipse,
      SmuflGlyph.noteheadPlusDoubleWhole,
      SmuflGlyph.noteheadPlusWhole,
      SmuflGlyph.noteheadPlusHalf,
      SmuflGlyph.noteheadPlusBlack,
      SmuflGlyph.noteheadCircleXDoubleWhole,
      SmuflGlyph.noteheadCircleXWhole,
      SmuflGlyph.noteheadCircleXHalf,
      SmuflGlyph.noteheadCircleX,
      SmuflGlyph.noteheadDoubleWholeWithX,
      SmuflGlyph.noteheadWholeWithX,
      SmuflGlyph.noteheadHalfWithX,
      SmuflGlyph.noteheadVoidWithX,
      SmuflGlyph.noteheadSquareWhite,
      SmuflGlyph.noteheadSquareBlack,
      SmuflGlyph.noteheadTriangleUpDoubleWhole,
      SmuflGlyph.noteheadTriangleUpWhole,
      SmuflGlyph.noteheadTriangleUpHalf,
      SmuflGlyph.noteheadTriangleUpWhite,
      SmuflGlyph.noteheadTriangleUpBlack,
      SmuflGlyph.noteheadTriangleLeftWhite,
      SmuflGlyph.noteheadTriangleLeftBlack,
      SmuflGlyph.noteheadTriangleRightWhite,
      SmuflGlyph.noteheadTriangleRightBlack,
      SmuflGlyph.noteheadTriangleDownDoubleWhole,
      SmuflGlyph.noteheadTriangleDownWhole,
      SmuflGlyph.noteheadTriangleDownHalf,
      SmuflGlyph.noteheadTriangleDownWhite,
      SmuflGlyph.noteheadTriangleDownBlack,
      SmuflGlyph.noteheadTriangleUpRightWhite,
      SmuflGlyph.noteheadTriangleUpRightBlack,
      SmuflGlyph.noteheadMoonWhite,
      SmuflGlyph.noteheadMoonBlack,
      SmuflGlyph.noteheadTriangleRoundDownWhite,
      SmuflGlyph.noteheadTriangleRoundDownBlack,
      SmuflGlyph.noteheadParenthesis,
      SmuflGlyph.noteheadSlashedBlack1,
      SmuflGlyph.noteheadSlashedBlack2,
      SmuflGlyph.noteheadSlashedHalf1,
      SmuflGlyph.noteheadSlashedHalf2,
      SmuflGlyph.noteheadSlashedWhole1,
      SmuflGlyph.noteheadSlashedWhole2,
      SmuflGlyph.noteheadSlashedDoubleWhole1,
      SmuflGlyph.noteheadSlashedDoubleWhole2,
      SmuflGlyph.noteheadDiamondDoubleWhole,
      SmuflGlyph.noteheadDiamondWhole,
      SmuflGlyph.noteheadDiamondHalf,
      SmuflGlyph.noteheadDiamondHalfWide,
      SmuflGlyph.noteheadDiamondBlack,
      SmuflGlyph.noteheadDiamondBlackWide,
      SmuflGlyph.noteheadDiamondWhite,
      SmuflGlyph.noteheadDiamondWhiteWide,
      SmuflGlyph.noteheadDiamondDoubleWholeOld,
      SmuflGlyph.noteheadDiamondWholeOld,
      SmuflGlyph.noteheadDiamondHalfOld,
      SmuflGlyph.noteheadDiamondBlackOld,
      SmuflGlyph.noteheadDiamondHalfFilled,
      SmuflGlyph.noteheadCircledBlack,
      SmuflGlyph.noteheadCircledHalf,
      SmuflGlyph.noteheadCircledWhole,
      SmuflGlyph.noteheadCircledDoubleWhole,
      SmuflGlyph.noteheadCircledBlackLarge,
      SmuflGlyph.noteheadCircledHalfLarge,
      SmuflGlyph.noteheadCircledWholeLarge,
      SmuflGlyph.noteheadCircledDoubleWholeLarge,
      SmuflGlyph.noteheadCircledXLarge,
      SmuflGlyph.noteheadLargeArrowUpDoubleWhole,
      SmuflGlyph.noteheadLargeArrowUpWhole,
      SmuflGlyph.noteheadLargeArrowUpHalf,
      SmuflGlyph.noteheadLargeArrowUpBlack,
      SmuflGlyph.noteheadLargeArrowDownDoubleWhole,
      SmuflGlyph.noteheadLargeArrowDownWhole,
      SmuflGlyph.noteheadLargeArrowDownHalf,
      SmuflGlyph.noteheadLargeArrowDownBlack,
      SmuflGlyph.noteheadParenthesisLeft,
      SmuflGlyph.noteheadParenthesisRight,
      SmuflGlyph.noteheadCircleSlash,
      SmuflGlyph.noteheadHeavyX,
      SmuflGlyph.noteheadHeavyXHat,
      SmuflGlyph.noteheadWholeFilled,
      SmuflGlyph.noteheadHalfFilled,
      SmuflGlyph.noteheadDiamondOpen,
    ],
    rangeStart: "\uE0A0",
    rangeEnd: "\uE0FF",
  );

  /// Noteheads supplement.
  static const GlyphRange noteheadsSupplement = GlyphRange(
    description: "Noteheads supplement",
    glyphs: [
      SmuflGlyph.noteheadNancarrowSine,
      SmuflGlyph.noteheadCowellThirdNoteSeriesWhole,
      SmuflGlyph.noteheadCowellThirdNoteSeriesHalf,
      SmuflGlyph.noteheadCowellThirdNoteSeriesBlack,
      SmuflGlyph.noteheadCowellFifthNoteSeriesWhole,
      SmuflGlyph.noteheadCowellFifthNoteSeriesHalf,
      SmuflGlyph.noteheadCowellFifthNoteSeriesBlack,
      SmuflGlyph.noteheadCowellSeventhNoteSeriesWhole,
      SmuflGlyph.noteheadCowellSeventhNoteSeriesHalf,
      SmuflGlyph.noteheadCowellSeventhNoteSeriesBlack,
      SmuflGlyph.noteheadCowellNinthNoteSeriesWhole,
      SmuflGlyph.noteheadCowellNinthNoteSeriesHalf,
      SmuflGlyph.noteheadCowellNinthNoteSeriesBlack,
      SmuflGlyph.noteheadCowellEleventhNoteSeriesWhole,
      SmuflGlyph.noteheadCowellEleventhNoteSeriesHalf,
      SmuflGlyph.noteheadCowellEleventhSeriesBlack,
      SmuflGlyph.noteheadCowellThirteenthNoteSeriesWhole,
      SmuflGlyph.noteheadCowellThirteenthNoteSeriesHalf,
      SmuflGlyph.noteheadCowellThirteenthNoteSeriesBlack,
      SmuflGlyph.noteheadCowellFifteenthNoteSeriesWhole,
      SmuflGlyph.noteheadCowellFifteenthNoteSeriesHalf,
      SmuflGlyph.noteheadCowellFifteenthNoteSeriesBlack,
    ],
    rangeStart: "\uEEA0",
    rangeEnd: "\uEEDF",
  );

  /// Octaves.
  static const GlyphRange octaves = GlyphRange(
    description: "Octaves",
    glyphs: [
      SmuflGlyph.ottava,
      SmuflGlyph.ottavaAlta,
      SmuflGlyph.ottavaBassa,
      SmuflGlyph.ottavaBassaBa,
      SmuflGlyph.quindicesima,
      SmuflGlyph.quindicesimaAlta,
      SmuflGlyph.quindicesimaBassa,
      SmuflGlyph.ventiduesima,
      SmuflGlyph.ventiduesimaAlta,
      SmuflGlyph.ventiduesimaBassa,
      SmuflGlyph.octaveParensLeft,
      SmuflGlyph.octaveParensRight,
      SmuflGlyph.ottavaBassaVb,
      SmuflGlyph.quindicesimaBassaMb,
      SmuflGlyph.ventiduesimaBassaMb,
      SmuflGlyph.octaveBassa,
    ],
    rangeStart: "\uE510",
    rangeEnd: "\uE51F",
  );

  /// Octaves supplement.
  static const GlyphRange octavesSupplement = GlyphRange(
    description: "Octaves supplement",
    glyphs: [
      SmuflGlyph.octaveLoco,
      SmuflGlyph.octaveBaselineA,
      SmuflGlyph.octaveSuperscriptA,
      SmuflGlyph.octaveBaselineB,
      SmuflGlyph.octaveSuperscriptB,
      SmuflGlyph.octaveBaselineM,
      SmuflGlyph.octaveSuperscriptM,
      SmuflGlyph.octaveBaselineV,
      SmuflGlyph.octaveSuperscriptV,
    ],
    rangeStart: "\uEC90",
    rangeEnd: "\uEC9F",
  );

  /// Olympian Sagittal extension (extreme precision) accidental diacritics.
  static const GlyphRange
      olympianSagittalExtensionExtremePrecisionAccidentalDiacritics =
      GlyphRange(
    description:
        "Olympian Sagittal extension (extreme precision) accidental diacritics",
    glyphs: [
      SmuflGlyph.accSagittal1MinaUp,
      SmuflGlyph.accSagittal1MinaDown,
      SmuflGlyph.accSagittal2MinasUp,
      SmuflGlyph.accSagittal2MinasDown,
    ],
    rangeStart: "\uE3F4",
    rangeEnd: "\uE3F7",
  );

  /// German organ tablature.
  static const GlyphRange organGerman = GlyphRange(
    description: "German organ tablature",
    glyphs: [
      SmuflGlyph.organGermanCUpper,
      SmuflGlyph.organGermanCisUpper,
      SmuflGlyph.organGermanDUpper,
      SmuflGlyph.organGermanDisUpper,
      SmuflGlyph.organGermanEUpper,
      SmuflGlyph.organGermanFUpper,
      SmuflGlyph.organGermanFisUpper,
      SmuflGlyph.organGermanGUpper,
      SmuflGlyph.organGermanGisUpper,
      SmuflGlyph.organGermanAUpper,
      SmuflGlyph.organGermanBUpper,
      SmuflGlyph.organGermanHUpper,
      SmuflGlyph.organGermanCLower,
      SmuflGlyph.organGermanCisLower,
      SmuflGlyph.organGermanDLower,
      SmuflGlyph.organGermanDisLower,
      SmuflGlyph.organGermanELower,
      SmuflGlyph.organGermanFLower,
      SmuflGlyph.organGermanFisLower,
      SmuflGlyph.organGermanGLower,
      SmuflGlyph.organGermanGisLower,
      SmuflGlyph.organGermanALower,
      SmuflGlyph.organGermanBLower,
      SmuflGlyph.organGermanHLower,
      SmuflGlyph.organGermanOctaveUp,
      SmuflGlyph.organGerman2OctaveUp,
      SmuflGlyph.organGermanOctaveDown,
      SmuflGlyph.organGermanTie,
      SmuflGlyph.organGermanAugmentationDot,
      SmuflGlyph.organGermanBuxheimerSemibrevisRest,
      SmuflGlyph.organGermanBuxheimerMinimaRest,
      SmuflGlyph.organGermanSemibrevisRest,
      SmuflGlyph.organGermanMinimaRest,
      SmuflGlyph.organGermanSemiminimaRest,
      SmuflGlyph.organGermanFusaRest,
      SmuflGlyph.organGermanSemifusaRest,
      SmuflGlyph.organGermanBuxheimerBrevis3,
      SmuflGlyph.organGermanBuxheimerBrevis2,
      SmuflGlyph.organGermanBuxheimerSemibrevis,
      SmuflGlyph.organGermanSemibrevis,
      SmuflGlyph.organGermanMinima,
      SmuflGlyph.organGermanSemiminima,
      SmuflGlyph.organGermanFusa,
      SmuflGlyph.organGermanSemifusa,
      SmuflGlyph.organGerman2Minimae,
      SmuflGlyph.organGerman2Semiminimae,
      SmuflGlyph.organGerman2Fusae,
      SmuflGlyph.organGerman2Semifusae,
      SmuflGlyph.organGerman3Minimae,
      SmuflGlyph.organGerman3Semiminimae,
      SmuflGlyph.organGerman3Fusae,
      SmuflGlyph.organGerman3Semifusae,
      SmuflGlyph.organGerman4Minimae,
      SmuflGlyph.organGerman4Semiminimae,
      SmuflGlyph.organGerman4Fusae,
      SmuflGlyph.organGerman4Semifusae,
      SmuflGlyph.organGerman5Minimae,
      SmuflGlyph.organGerman5Semiminimae,
      SmuflGlyph.organGerman5Fusae,
      SmuflGlyph.organGerman5Semifusae,
      SmuflGlyph.organGerman6Minimae,
      SmuflGlyph.organGerman6Semiminimae,
      SmuflGlyph.organGerman6Fusae,
      SmuflGlyph.organGerman6Semifusae,
    ],
    rangeStart: "\uEE00",
    rangeEnd: "\uEE4F",
  );

  /// Other accidentals.
  static const GlyphRange otherAccidentals = GlyphRange(
    description: "Other accidentals",
    glyphs: [
      SmuflGlyph.accidentalXenakisOneThirdToneSharp,
      SmuflGlyph.accidentalXenakisTwoThirdTonesSharp,
      SmuflGlyph.accidentalQuarterToneSharpBusotti,
      SmuflGlyph.accidentalSharpOneHorizontalStroke,
      SmuflGlyph.accidentalThreeQuarterTonesSharpBusotti,
      SmuflGlyph.accidentalQuarterToneSharpWiggle,
      SmuflGlyph.accidentalTavenerSharp,
      SmuflGlyph.accidentalTavenerFlat,
      SmuflGlyph.accidentalQuarterToneFlatPenderecki,
      SmuflGlyph.accidentalCommaSlashUp,
      SmuflGlyph.accidentalCommaSlashDown,
      SmuflGlyph.accidentalWilsonPlus,
      SmuflGlyph.accidentalWilsonMinus,
      SmuflGlyph.accidentalLargeDoubleSharp,
      SmuflGlyph.accidentalQuarterToneSharp4,
      SmuflGlyph.accidentalQuarterToneFlat4,
      SmuflGlyph.accidentalQuarterToneFlatFilledReversed,
      SmuflGlyph.accidentalSharpReversed,
      SmuflGlyph.accidentalNaturalReversed,
      SmuflGlyph.accidentalDoubleFlatReversed,
      SmuflGlyph.accidentalFlatTurned,
      SmuflGlyph.accidentalDoubleFlatTurned,
      SmuflGlyph.accidentalThreeQuarterTonesFlatGrisey,
      SmuflGlyph.accidentalThreeQuarterTonesFlatTartini,
      SmuflGlyph.accidentalQuarterToneFlatVanBlankenburg,
      SmuflGlyph.accidentalThreeQuarterTonesFlatCouper,
      SmuflGlyph.accidentalOneThirdToneSharpFerneyhough,
      SmuflGlyph.accidentalOneThirdToneFlatFerneyhough,
      SmuflGlyph.accidentalTwoThirdTonesSharpFerneyhough,
      SmuflGlyph.accidentalTwoThirdTonesFlatFerneyhough,
      SmuflGlyph.accidentalOneQuarterToneSharpFerneyhough,
      SmuflGlyph.accidentalOneQuarterToneFlatFerneyhough,
    ],
    rangeStart: "\uE470",
    rangeEnd: "\uE49F",
  );

  /// Other accidentals supplement.
  static const GlyphRange otherAccidentalsSupplement = GlyphRange(
    description: "Other accidentals supplement",
    glyphs: [
      SmuflGlyph.accidentalUpsAndDownsUp,
      SmuflGlyph.accidentalUpsAndDownsDown,
      SmuflGlyph.accidentalUpsAndDownsMore,
      SmuflGlyph.accidentalUpsAndDownsLess,
      SmuflGlyph.accidentalHabaQuarterToneHigher,
      SmuflGlyph.accidentalHabaFlatQuarterToneHigher,
      SmuflGlyph.accidentalHabaSharpThreeQuarterTonesHigher,
      SmuflGlyph.accidentalHabaQuarterToneLower,
      SmuflGlyph.accidentalHabaSharpQuarterToneLower,
      SmuflGlyph.accidentalHabaFlatThreeQuarterTonesLower,
    ],
    rangeStart: "\uEE60",
    rangeEnd: "\uEE6F",
  );

  /// Other baroque ornaments.
  static const GlyphRange otherBaroqueOrnaments = GlyphRange(
    description: "Other baroque ornaments",
    glyphs: [
      SmuflGlyph.ornamentPortDeVoixV,
      SmuflGlyph.ornamentRightFacingHalfCircle,
      SmuflGlyph.ornamentLeftFacingHalfCircle,
      SmuflGlyph.ornamentRightFacingHook,
      SmuflGlyph.ornamentLeftFacingHook,
      SmuflGlyph.ornamentHookBeforeNote,
      SmuflGlyph.ornamentHookAfterNote,
      SmuflGlyph.ornamentUpCurve,
      SmuflGlyph.ornamentDownCurve,
      SmuflGlyph.ornamentShortObliqueLineBeforeNote,
      SmuflGlyph.ornamentShortObliqueLineAfterNote,
      SmuflGlyph.ornamentObliqueLineBeforeNote,
      SmuflGlyph.ornamentObliqueLineAfterNote,
      SmuflGlyph.ornamentDoubleObliqueLinesBeforeNote,
      SmuflGlyph.ornamentDoubleObliqueLinesAfterNote,
      SmuflGlyph.ornamentObliqueLineHorizBeforeNote,
      SmuflGlyph.ornamentObliqueLineHorizAfterNote,
      SmuflGlyph.ornamentComma,
      SmuflGlyph.ornamentShake3,
      SmuflGlyph.ornamentVerticalLine,
      SmuflGlyph.ornamentShakeMuffat1,
      SmuflGlyph.glissandoUp,
      SmuflGlyph.glissandoDown,
      SmuflGlyph.ornamentSchleifer,
      SmuflGlyph.ornamentPinceCouperin,
      SmuflGlyph.ornamentTremblementCouperin,
    ],
    rangeStart: "\uE570",
    rangeEnd: "\uE58F",
  );

  /// Percussion playing technique pictograms.
  static const GlyphRange percussionPlayingTechniquePictograms = GlyphRange(
    description: "Percussion playing technique pictograms",
    glyphs: [
      SmuflGlyph.pictStickShot,
      SmuflGlyph.pictScrapeCenterToEdge,
      SmuflGlyph.pictScrapeEdgeToCenter,
      SmuflGlyph.pictScrapeAroundRim,
      SmuflGlyph.pictOnRim,
      SmuflGlyph.pictOpenRimShot,
      SmuflGlyph.pictHalfOpen1,
      SmuflGlyph.pictHalfOpen2,
      SmuflGlyph.pictOpen,
      SmuflGlyph.pictDamp1,
      SmuflGlyph.pictDamp2,
      SmuflGlyph.pictDamp3,
      SmuflGlyph.pictDamp4,
      SmuflGlyph.pictRimShotOnStem,
      SmuflGlyph.pictCenter1,
      SmuflGlyph.pictCenter2,
      SmuflGlyph.pictCenter3,
      SmuflGlyph.pictRim1,
      SmuflGlyph.pictRim2,
      SmuflGlyph.pictRim3,
      SmuflGlyph.pictNormalPosition,
      SmuflGlyph.pictChokeCymbal,
      SmuflGlyph.pictRightHandSquare,
      SmuflGlyph.pictLeftHandCircle,
      SmuflGlyph.pictSwishStem,
      SmuflGlyph.pictTurnRightStem,
      SmuflGlyph.pictTurnLeftStem,
      SmuflGlyph.pictTurnRightLeftStem,
      SmuflGlyph.pictCrushStem,
      SmuflGlyph.pictDeadNoteStem,
      SmuflGlyph.pictScrapeAroundRimClockwise,
    ],
    rangeStart: "\uE7F0",
    rangeEnd: "\uE80F",
  );

  /// Persian accidentals.
  static const GlyphRange persianAccidentals = GlyphRange(
    description: "Persian accidentals",
    glyphs: [
      SmuflGlyph.accidentalKoron,
      SmuflGlyph.accidentalSori,
    ],
    rangeStart: "\uE460",
    rangeEnd: "\uE46F",
  );

  /// Plucked techniques.
  static const GlyphRange pluckedTechniques = GlyphRange(
    description: "Plucked techniques",
    glyphs: [
      SmuflGlyph.pluckedSnapPizzicatoBelow,
      SmuflGlyph.pluckedSnapPizzicatoAbove,
      SmuflGlyph.pluckedBuzzPizzicato,
      SmuflGlyph.pluckedLeftHandPizzicato,
      SmuflGlyph.arpeggiatoUp,
      SmuflGlyph.arpeggiatoDown,
      SmuflGlyph.pluckedWithFingernails,
      SmuflGlyph.pluckedFingernailFlick,
      SmuflGlyph.pluckedDamp,
      SmuflGlyph.pluckedDampAll,
      SmuflGlyph.pluckedPlectrum,
      SmuflGlyph.pluckedDampOnStem,
      SmuflGlyph.arpeggiato,
    ],
    rangeStart: "\uE630",
    rangeEnd: "\uE63F",
  );

  /// Precomposed trills and mordents.
  static const GlyphRange precomposedTrillsAndMordents = GlyphRange(
    description: "Precomposed trills and mordents",
    glyphs: [
      SmuflGlyph.ornamentPrecompSlide,
      SmuflGlyph.ornamentPrecompDescendingSlide,
      SmuflGlyph.ornamentPrecompAppoggTrill,
      SmuflGlyph.ornamentPrecompAppoggTrillSuffix,
      SmuflGlyph.ornamentPrecompTurnTrillDAnglebert,
      SmuflGlyph.ornamentPrecompSlideTrillDAnglebert,
      SmuflGlyph.ornamentPrecompSlideTrillMarpurg,
      SmuflGlyph.ornamentPrecompTurnTrillBach,
      SmuflGlyph.ornamentPrecompSlideTrillBach,
      SmuflGlyph.ornamentPrecompSlideTrillMuffat,
      SmuflGlyph.ornamentPrecompSlideTrillSuffixMuffat,
      SmuflGlyph.ornamentPrecompTrillSuffixDandrieu,
      SmuflGlyph.ornamentPrecompPortDeVoixMordent,
      SmuflGlyph.ornamentPrecompTrillWithMordent,
      SmuflGlyph.ornamentPrecompCadence,
      SmuflGlyph.ornamentPrecompCadenceWithTurn,
      SmuflGlyph.ornamentPrecompDoubleCadenceLowerPrefix,
      SmuflGlyph.ornamentPrecompCadenceUpperPrefix,
      SmuflGlyph.ornamentPrecompCadenceUpperPrefixTurn,
      SmuflGlyph.ornamentPrecompDoubleCadenceUpperPrefix,
      SmuflGlyph.ornamentPrecompDoubleCadenceUpperPrefixTurn,
      SmuflGlyph.ornamentPrecompMordentRelease,
      SmuflGlyph.ornamentPrecompMordentUpperPrefix,
      SmuflGlyph.ornamentPrecompInvertedMordentUpperPrefix,
      SmuflGlyph.ornamentPrecompTrillLowerSuffix,
    ],
    rangeStart: "\uE5B0",
    rangeEnd: "\uE5CF",
  );

  /// Promethean Sagittal extension (high precision) multi-shaft accidentals.
  static const GlyphRange
      prometheanSagittalExtensionHighPrecisionMultiShaftAccidentals =
      GlyphRange(
    description:
        "Promethean Sagittal extension (high precision) multi-shaft accidentals",
    glyphs: [
      SmuflGlyph.accSagittalSharp23SDown,
      SmuflGlyph.accSagittalFlat23SUp,
      SmuflGlyph.accSagittalSharp49SDown,
      SmuflGlyph.accSagittalFlat49SUp,
      SmuflGlyph.accSagittalSharp7v19CDown,
      SmuflGlyph.accSagittalFlat7v19CUp,
      SmuflGlyph.accSagittalSharp19CDown,
      SmuflGlyph.accSagittalFlat19CUp,
      SmuflGlyph.accSagittalSharp11v49CDown,
      SmuflGlyph.accSagittalFlat11v49CUp,
      SmuflGlyph.accSagittalSharp143CDown,
      SmuflGlyph.accSagittalFlat143CUp,
      SmuflGlyph.accSagittalSharp17kDown,
      SmuflGlyph.accSagittalFlat17kUp,
      SmuflGlyph.accSagittalSharp19sDown,
      SmuflGlyph.accSagittalFlat19sUp,
      SmuflGlyph.accSagittalSharp19sUp,
      SmuflGlyph.accSagittalFlat19sDown,
      SmuflGlyph.accSagittalSharp17kUp,
      SmuflGlyph.accSagittalFlat17kDown,
      SmuflGlyph.accSagittalSharp143CUp,
      SmuflGlyph.accSagittalFlat143CDown,
      SmuflGlyph.accSagittalSharp11v49CUp,
      SmuflGlyph.accSagittalFlat11v49CDown,
      SmuflGlyph.accSagittalSharp19CUp,
      SmuflGlyph.accSagittalFlat19CDown,
      SmuflGlyph.accSagittalSharp7v19CUp,
      SmuflGlyph.accSagittalFlat7v19CDown,
      SmuflGlyph.accSagittalSharp49SUp,
      SmuflGlyph.accSagittalFlat49SDown,
      SmuflGlyph.accSagittalSharp23SUp,
      SmuflGlyph.accSagittalFlat23SDown,
      SmuflGlyph.accSagittalSharp5v13MUp,
      SmuflGlyph.accSagittalFlat5v13MDown,
      SmuflGlyph.accSagittalSharp11v19MUp,
      SmuflGlyph.accSagittalFlat11v19MDown,
      SmuflGlyph.accSagittalSharp49MUp,
      SmuflGlyph.accSagittalFlat49MDown,
      SmuflGlyph.accSagittalSharp5v49MUp,
      SmuflGlyph.accSagittalFlat5v49MDown,
      SmuflGlyph.accSagittalSharp49LUp,
      SmuflGlyph.accSagittalFlat49LDown,
      SmuflGlyph.accSagittalSharp11v19LUp,
      SmuflGlyph.accSagittalFlat11v19LDown,
      SmuflGlyph.accSagittalSharp5v13LUp,
      SmuflGlyph.accSagittalFlat5v13LDown,
      SmuflGlyph.accSagittalUnused3,
      SmuflGlyph.accSagittalUnused4,
      SmuflGlyph.accSagittalDoubleSharp23SDown,
      SmuflGlyph.accSagittalDoubleFlat23SUp,
      SmuflGlyph.accSagittalDoubleSharp49SDown,
      SmuflGlyph.accSagittalDoubleFlat49SUp,
      SmuflGlyph.accSagittalDoubleSharp7v19CDown,
      SmuflGlyph.accSagittalDoubleFlat7v19CUp,
      SmuflGlyph.accSagittalDoubleSharp19CDown,
      SmuflGlyph.accSagittalDoubleFlat19CUp,
      SmuflGlyph.accSagittalDoubleSharp11v49CDown,
      SmuflGlyph.accSagittalDoubleFlat11v49CUp,
      SmuflGlyph.accSagittalDoubleSharp143CDown,
      SmuflGlyph.accSagittalDoubleFlat143CUp,
      SmuflGlyph.accSagittalDoubleSharp17kDown,
      SmuflGlyph.accSagittalDoubleFlat17kUp,
      SmuflGlyph.accSagittalDoubleSharp19sDown,
      SmuflGlyph.accSagittalDoubleFlat19sUp,
    ],
    rangeStart: "\uE3B0",
    rangeEnd: "\uE3EF",
  );

  /// Promethean Sagittal extension (high precision) single-shaft accidentals.
  static const GlyphRange
      prometheanSagittalExtensionHighPrecisionSingleShaftAccidentals =
      GlyphRange(
    description:
        "Promethean Sagittal extension (high precision) single-shaft accidentals",
    glyphs: [
      SmuflGlyph.accSagittal19SchismaUp,
      SmuflGlyph.accSagittal19SchismaDown,
      SmuflGlyph.accSagittal17KleismaUp,
      SmuflGlyph.accSagittal17KleismaDown,
      SmuflGlyph.accSagittal143CommaUp,
      SmuflGlyph.accSagittal143CommaDown,
      SmuflGlyph.accSagittal11v49CommaUp,
      SmuflGlyph.accSagittal11v49CommaDown,
      SmuflGlyph.accSagittal19CommaUp,
      SmuflGlyph.accSagittal19CommaDown,
      SmuflGlyph.accSagittal7v19CommaUp,
      SmuflGlyph.accSagittal7v19CommaDown,
      SmuflGlyph.accSagittal49SmallDiesisUp,
      SmuflGlyph.accSagittal49SmallDiesisDown,
      SmuflGlyph.accSagittal23SmallDiesisUp,
      SmuflGlyph.accSagittal23SmallDiesisDown,
      SmuflGlyph.accSagittal5v13MediumDiesisUp,
      SmuflGlyph.accSagittal5v13MediumDiesisDown,
      SmuflGlyph.accSagittal11v19MediumDiesisUp,
      SmuflGlyph.accSagittal11v19MediumDiesisDown,
      SmuflGlyph.accSagittal49MediumDiesisUp,
      SmuflGlyph.accSagittal49MediumDiesisDown,
      SmuflGlyph.accSagittal5v49MediumDiesisUp,
      SmuflGlyph.accSagittal5v49MediumDiesisDown,
      SmuflGlyph.accSagittal49LargeDiesisUp,
      SmuflGlyph.accSagittal49LargeDiesisDown,
      SmuflGlyph.accSagittal11v19LargeDiesisUp,
      SmuflGlyph.accSagittal11v19LargeDiesisDown,
      SmuflGlyph.accSagittal5v13LargeDiesisUp,
      SmuflGlyph.accSagittal5v13LargeDiesisDown,
    ],
    rangeStart: "\uE390",
    rangeEnd: "\uE3AF",
  );

  /// Renaissance lute tablature.
  static const GlyphRange renaissanceLuteTablature = GlyphRange(
    description: "Renaissance lute tablature",
    glyphs: [
      SmuflGlyph.luteStaff6Lines,
      SmuflGlyph.luteStaff6LinesWide,
      SmuflGlyph.luteStaff6LinesNarrow,
      SmuflGlyph.luteBarlineStartRepeat,
      SmuflGlyph.luteBarlineEndRepeat,
      SmuflGlyph.luteBarlineFinal,
      SmuflGlyph.luteDurationDoubleWhole,
      SmuflGlyph.luteDurationWhole,
      SmuflGlyph.luteDurationHalf,
      SmuflGlyph.luteDurationQuarter,
      SmuflGlyph.luteDuration8th,
      SmuflGlyph.luteDuration16th,
      SmuflGlyph.luteDuration32nd,
      SmuflGlyph.luteFingeringRHThumb,
      SmuflGlyph.luteFingeringRHFirst,
      SmuflGlyph.luteFingeringRHSecond,
      SmuflGlyph.luteFingeringRHThird,
    ],
    rangeStart: "\uEBA0",
    rangeEnd: "\uEBBF",
  );

  /// Repeats.
  static const GlyphRange repeats = GlyphRange(
    description: "Repeats",
    glyphs: [
      SmuflGlyph.repeatLeft,
      SmuflGlyph.repeatRight,
      SmuflGlyph.repeatRightLeft,
      SmuflGlyph.repeatDots,
      SmuflGlyph.repeatDot,
      SmuflGlyph.dalSegno,
      SmuflGlyph.daCapo,
      SmuflGlyph.segno,
      SmuflGlyph.coda,
      SmuflGlyph.codaSquare,
      SmuflGlyph.segnoSerpent1,
      SmuflGlyph.segnoSerpent2,
      SmuflGlyph.leftRepeatSmall,
      SmuflGlyph.rightRepeatSmall,
    ],
    rangeStart: "\uE040",
    rangeEnd: "\uE04F",
  );

  /// Rests.
  static const GlyphRange rests = GlyphRange(
    description: "Rests",
    glyphs: [
      SmuflGlyph.restMaxima,
      SmuflGlyph.restLonga,
      SmuflGlyph.restDoubleWhole,
      SmuflGlyph.restWhole,
      SmuflGlyph.restHalf,
      SmuflGlyph.restQuarter,
      SmuflGlyph.rest8th,
      SmuflGlyph.rest16th,
      SmuflGlyph.rest32nd,
      SmuflGlyph.rest64th,
      SmuflGlyph.rest128th,
      SmuflGlyph.rest256th,
      SmuflGlyph.rest512th,
      SmuflGlyph.rest1024th,
      SmuflGlyph.restHBar,
      SmuflGlyph.restHBarLeft,
      SmuflGlyph.restHBarMiddle,
      SmuflGlyph.restHBarRight,
      SmuflGlyph.restQuarterOld,
      SmuflGlyph.restDoubleWholeLegerLine,
      SmuflGlyph.restWholeLegerLine,
      SmuflGlyph.restHalfLegerLine,
      SmuflGlyph.restQuarterZ,
    ],
    rangeStart: "\uE4E0",
    rangeEnd: "\uE4FF",
  );

  /// Round and square noteheads.
  static const GlyphRange roundAndSquareNoteheads = GlyphRange(
    description: "Round and square noteheads",
    glyphs: [
      SmuflGlyph.noteheadRoundBlackLarge,
      SmuflGlyph.noteheadRoundWhiteLarge,
      SmuflGlyph.noteheadRoundWhiteWithDotLarge,
      SmuflGlyph.noteheadRoundBlack,
      SmuflGlyph.noteheadRoundWhite,
      SmuflGlyph.noteheadRoundWhiteWithDot,
      SmuflGlyph.noteheadRoundBlackSlashedLarge,
      SmuflGlyph.noteheadRoundWhiteSlashedLarge,
      SmuflGlyph.noteheadRoundBlackSlashed,
      SmuflGlyph.noteheadRoundWhiteSlashed,
      SmuflGlyph.noteheadSquareBlackLarge,
      SmuflGlyph.noteheadSquareBlackWhite,
      SmuflGlyph.noteheadRoundBlackDoubleSlashed,
      SmuflGlyph.noteheadRoundWhiteDoubleSlashed,
    ],
    rangeStart: "\uE110",
    rangeEnd: "\uE11F",
  );

  /// Scale degrees.
  static const GlyphRange scaleDegrees = GlyphRange(
    description: "Scale degrees",
    glyphs: [
      SmuflGlyph.scaleDegree1,
      SmuflGlyph.scaleDegree2,
      SmuflGlyph.scaleDegree3,
      SmuflGlyph.scaleDegree4,
      SmuflGlyph.scaleDegree5,
      SmuflGlyph.scaleDegree6,
      SmuflGlyph.scaleDegree7,
      SmuflGlyph.scaleDegree8,
      SmuflGlyph.scaleDegree9,
    ],
    rangeStart: "\uEF00",
    rangeEnd: "\uEF0F",
  );

  /// Shakers or rattles pictograms.
  static const GlyphRange shakersOrRattlesPictograms = GlyphRange(
    description: "Shakers or rattles pictograms",
    glyphs: [
      SmuflGlyph.pictFlexatone,
      SmuflGlyph.pictMaraca,
      SmuflGlyph.pictMaracas,
      SmuflGlyph.pictCabasa,
      SmuflGlyph.pictThundersheet,
      SmuflGlyph.pictVibraslap,
      SmuflGlyph.pictSistrum,
      SmuflGlyph.pictRainstick,
      SmuflGlyph.pictChainRattle,
    ],
    rangeStart: "\uE740",
    rangeEnd: "\uE74F",
  );

  /// Shape note noteheads.
  static const GlyphRange shapeNoteNoteheads = GlyphRange(
    description: "Shape note noteheads",
    glyphs: [
      SmuflGlyph.noteShapeRoundWhite,
      SmuflGlyph.noteShapeRoundBlack,
      SmuflGlyph.noteShapeSquareWhite,
      SmuflGlyph.noteShapeSquareBlack,
      SmuflGlyph.noteShapeTriangleRightWhite,
      SmuflGlyph.noteShapeTriangleRightBlack,
      SmuflGlyph.noteShapeTriangleLeftWhite,
      SmuflGlyph.noteShapeTriangleLeftBlack,
      SmuflGlyph.noteShapeDiamondWhite,
      SmuflGlyph.noteShapeDiamondBlack,
      SmuflGlyph.noteShapeTriangleUpWhite,
      SmuflGlyph.noteShapeTriangleUpBlack,
      SmuflGlyph.noteShapeMoonWhite,
      SmuflGlyph.noteShapeMoonBlack,
      SmuflGlyph.noteShapeTriangleRoundWhite,
      SmuflGlyph.noteShapeTriangleRoundBlack,
      SmuflGlyph.noteShapeKeystoneWhite,
      SmuflGlyph.noteShapeKeystoneBlack,
      SmuflGlyph.noteShapeQuarterMoonWhite,
      SmuflGlyph.noteShapeQuarterMoonBlack,
      SmuflGlyph.noteShapeIsoscelesTriangleWhite,
      SmuflGlyph.noteShapeIsoscelesTriangleBlack,
      SmuflGlyph.noteShapeMoonLeftWhite,
      SmuflGlyph.noteShapeMoonLeftBlack,
      SmuflGlyph.noteShapeArrowheadLeftWhite,
      SmuflGlyph.noteShapeArrowheadLeftBlack,
      SmuflGlyph.noteShapeTriangleRoundLeftWhite,
      SmuflGlyph.noteShapeTriangleRoundLeftBlack,
    ],
    rangeStart: "\uE1B0",
    rangeEnd: "\uE1CF",
  );

  /// Shape note noteheads supplement.
  static const GlyphRange shapeNoteNoteheadsSupplement = GlyphRange(
    description: "Shape note noteheads supplement",
    glyphs: [
      SmuflGlyph.noteShapeRoundDoubleWhole,
      SmuflGlyph.noteShapeSquareDoubleWhole,
      SmuflGlyph.noteShapeTriangleRightDoubleWhole,
      SmuflGlyph.noteShapeTriangleLeftDoubleWhole,
      SmuflGlyph.noteShapeDiamondDoubleWhole,
      SmuflGlyph.noteShapeTriangleUpDoubleWhole,
      SmuflGlyph.noteShapeMoonDoubleWhole,
      SmuflGlyph.noteShapeTriangleRoundDoubleWhole,
      SmuflGlyph.noteShapeKeystoneDoubleWhole,
      SmuflGlyph.noteShapeQuarterMoonDoubleWhole,
      SmuflGlyph.noteShapeIsoscelesTriangleDoubleWhole,
      SmuflGlyph.noteShapeMoonLeftDoubleWhole,
      SmuflGlyph.noteShapeArrowheadLeftDoubleWhole,
      SmuflGlyph.noteShapeTriangleRoundLeftDoubleWhole,
    ],
    rangeStart: "\uECD0",
    rangeEnd: "\uECDF",
  );

  /// Simplified Music Notation.
  static const GlyphRange simplifiedMusicNotation = GlyphRange(
    description: "Simplified Music Notation",
    glyphs: [
      SmuflGlyph.smnSharp,
      SmuflGlyph.smnSharpWhite,
      SmuflGlyph.smnFlat,
      SmuflGlyph.smnFlatWhite,
      SmuflGlyph.smnHistorySharp,
      SmuflGlyph.smnHistoryDoubleSharp,
      SmuflGlyph.smnHistoryFlat,
      SmuflGlyph.smnHistoryDoubleFlat,
      SmuflGlyph.smnNatural,
      SmuflGlyph.smnSharpDown,
      SmuflGlyph.smnSharpWhiteDown,
    ],
    rangeStart: "\uEC50",
    rangeEnd: "\uEC5F",
  );

  /// Sims accidentals (72-EDO).
  static const GlyphRange simsAccidentals72Edo = GlyphRange(
    description: "Sims accidentals (72-EDO)",
    glyphs: [
      SmuflGlyph.accidentalSims12Down,
      SmuflGlyph.accidentalSims6Down,
      SmuflGlyph.accidentalSims4Down,
      SmuflGlyph.accidentalSims12Up,
      SmuflGlyph.accidentalSims6Up,
      SmuflGlyph.accidentalSims4Up,
    ],
    rangeStart: "\uE2A0",
    rangeEnd: "\uE2AF",
  );

  /// Slash noteheads.
  static const GlyphRange slashNoteheads = GlyphRange(
    description: "Slash noteheads",
    glyphs: [
      SmuflGlyph.noteheadSlashVerticalEnds,
      SmuflGlyph.noteheadSlashHorizontalEnds,
      SmuflGlyph.noteheadSlashWhiteWhole,
      SmuflGlyph.noteheadSlashWhiteHalf,
      SmuflGlyph.noteheadSlashDiamondWhite,
      SmuflGlyph.noteheadSlashVerticalEndsSmall,
      SmuflGlyph.noteheadSlashX,
      SmuflGlyph.noteheadSlashVerticalEndsMuted,
      SmuflGlyph.noteheadSlashHorizontalEndsMuted,
      SmuflGlyph.noteheadSlashWhiteMuted,
      SmuflGlyph.noteheadSlashWhiteDoubleWhole,
    ],
    rangeStart: "\uE100",
    rangeEnd: "\uE10F",
  );

  /// Spartan Sagittal multi-shaft accidentals.
  static const GlyphRange spartanSagittalMultiShaftAccidentals = GlyphRange(
    description: "Spartan Sagittal multi-shaft accidentals",
    glyphs: [
      SmuflGlyph.accSagittalSharp25SDown,
      SmuflGlyph.accSagittalFlat25SUp,
      SmuflGlyph.accSagittalSharp7CDown,
      SmuflGlyph.accSagittalFlat7CUp,
      SmuflGlyph.accSagittalSharp5CDown,
      SmuflGlyph.accSagittalFlat5CUp,
      SmuflGlyph.accSagittalSharp5v7kDown,
      SmuflGlyph.accSagittalFlat5v7kUp,
      SmuflGlyph.accSagittalSharp,
      SmuflGlyph.accSagittalFlat,
      SmuflGlyph.accSagittalUnused1,
      SmuflGlyph.accSagittalUnused2,
      SmuflGlyph.accSagittalSharp5v7kUp,
      SmuflGlyph.accSagittalFlat5v7kDown,
      SmuflGlyph.accSagittalSharp5CUp,
      SmuflGlyph.accSagittalFlat5CDown,
      SmuflGlyph.accSagittalSharp7CUp,
      SmuflGlyph.accSagittalFlat7CDown,
      SmuflGlyph.accSagittalSharp25SUp,
      SmuflGlyph.accSagittalFlat25SDown,
      SmuflGlyph.accSagittalSharp35MUp,
      SmuflGlyph.accSagittalFlat35MDown,
      SmuflGlyph.accSagittalSharp11MUp,
      SmuflGlyph.accSagittalFlat11MDown,
      SmuflGlyph.accSagittalSharp11LUp,
      SmuflGlyph.accSagittalFlat11LDown,
      SmuflGlyph.accSagittalSharp35LUp,
      SmuflGlyph.accSagittalFlat35LDown,
      SmuflGlyph.accSagittalDoubleSharp25SDown,
      SmuflGlyph.accSagittalDoubleFlat25SUp,
      SmuflGlyph.accSagittalDoubleSharp7CDown,
      SmuflGlyph.accSagittalDoubleFlat7CUp,
      SmuflGlyph.accSagittalDoubleSharp5CDown,
      SmuflGlyph.accSagittalDoubleFlat5CUp,
      SmuflGlyph.accSagittalDoubleSharp5v7kDown,
      SmuflGlyph.accSagittalDoubleFlat5v7kUp,
      SmuflGlyph.accSagittalDoubleSharp,
      SmuflGlyph.accSagittalDoubleFlat,
    ],
    rangeStart: "\uE310",
    rangeEnd: "\uE33F",
  );

  /// Spartan Sagittal single-shaft accidentals.
  static const GlyphRange spartanSagittalSingleShaftAccidentals = GlyphRange(
    description: "Spartan Sagittal single-shaft accidentals",
    glyphs: [
      SmuflGlyph.accSagittal5v7KleismaUp,
      SmuflGlyph.accSagittal5v7KleismaDown,
      SmuflGlyph.accSagittal5CommaUp,
      SmuflGlyph.accSagittal5CommaDown,
      SmuflGlyph.accSagittal7CommaUp,
      SmuflGlyph.accSagittal7CommaDown,
      SmuflGlyph.accSagittal25SmallDiesisUp,
      SmuflGlyph.accSagittal25SmallDiesisDown,
      SmuflGlyph.accSagittal35MediumDiesisUp,
      SmuflGlyph.accSagittal35MediumDiesisDown,
      SmuflGlyph.accSagittal11MediumDiesisUp,
      SmuflGlyph.accSagittal11MediumDiesisDown,
      SmuflGlyph.accSagittal11LargeDiesisUp,
      SmuflGlyph.accSagittal11LargeDiesisDown,
      SmuflGlyph.accSagittal35LargeDiesisUp,
      SmuflGlyph.accSagittal35LargeDiesisDown,
    ],
    rangeStart: "\uE300",
    rangeEnd: "\uE30F",
  );

  /// Staff brackets and dividers.
  static const GlyphRange staffBracketsAndDividers = GlyphRange(
    description: "Staff brackets and dividers",
    glyphs: [
      SmuflGlyph.brace,
      SmuflGlyph.reversedBrace,
      SmuflGlyph.bracket,
      SmuflGlyph.bracketTop,
      SmuflGlyph.bracketBottom,
      SmuflGlyph.reversedBracketTop,
      SmuflGlyph.reversedBracketBottom,
      SmuflGlyph.systemDivider,
      SmuflGlyph.systemDividerLong,
      SmuflGlyph.systemDividerExtraLong,
      SmuflGlyph.splitBarDivider,
      SmuflGlyph.staffDivideArrowDown,
      SmuflGlyph.staffDivideArrowUp,
      SmuflGlyph.staffDivideArrowUpDown,
    ],
    rangeStart: "\uE000",
    rangeEnd: "\uE00F",
  );

  /// Standard accidentals (12-EDO).
  static const GlyphRange standardAccidentals12Edo = GlyphRange(
    description: "Standard accidentals (12-EDO)",
    glyphs: [
      SmuflGlyph.accidentalFlat,
      SmuflGlyph.accidentalNatural,
      SmuflGlyph.accidentalSharp,
      SmuflGlyph.accidentalDoubleSharp,
      SmuflGlyph.accidentalDoubleFlat,
      SmuflGlyph.accidentalTripleSharp,
      SmuflGlyph.accidentalTripleFlat,
      SmuflGlyph.accidentalNaturalFlat,
      SmuflGlyph.accidentalNaturalSharp,
      SmuflGlyph.accidentalSharpSharp,
      SmuflGlyph.accidentalParensLeft,
      SmuflGlyph.accidentalParensRight,
      SmuflGlyph.accidentalBracketLeft,
      SmuflGlyph.accidentalBracketRight,
    ],
    rangeStart: "\uE260",
    rangeEnd: "\uE26F",
  );

  /// Standard accidentals for chord symbols.
  static const GlyphRange standardAccidentalsChordSymbols = GlyphRange(
    description: "Standard accidentals for chord symbols",
    glyphs: [
      SmuflGlyph.csymAccidentalFlat,
      SmuflGlyph.csymAccidentalNatural,
      SmuflGlyph.csymAccidentalSharp,
      SmuflGlyph.csymAccidentalDoubleSharp,
      SmuflGlyph.csymAccidentalDoubleFlat,
      SmuflGlyph.csymAccidentalTripleSharp,
      SmuflGlyph.csymAccidentalTripleFlat,
    ],
    rangeStart: "\uED60",
    rangeEnd: "\uED6F",
  );

  /// Staves.
  static const GlyphRange staves = GlyphRange(
    description: "Staves",
    glyphs: [
      SmuflGlyph.staff1Line,
      SmuflGlyph.staff2Lines,
      SmuflGlyph.staff3Lines,
      SmuflGlyph.staff4Lines,
      SmuflGlyph.staff5Lines,
      SmuflGlyph.staff6Lines,
      SmuflGlyph.staff1LineWide,
      SmuflGlyph.staff2LinesWide,
      SmuflGlyph.staff3LinesWide,
      SmuflGlyph.staff4LinesWide,
      SmuflGlyph.staff5LinesWide,
      SmuflGlyph.staff6LinesWide,
      SmuflGlyph.staff1LineNarrow,
      SmuflGlyph.staff2LinesNarrow,
      SmuflGlyph.staff3LinesNarrow,
      SmuflGlyph.staff4LinesNarrow,
      SmuflGlyph.staff5LinesNarrow,
      SmuflGlyph.staff6LinesNarrow,
      SmuflGlyph.legerLine,
      SmuflGlyph.legerLineWide,
      SmuflGlyph.legerLineNarrow,
    ],
    rangeStart: "\uE010",
    rangeEnd: "\uE02F",
  );

  /// Stein-Zimmermann accidentals (24-EDO).
  static const GlyphRange steinZimmermannAccidentals24Edo = GlyphRange(
    description: "Stein-Zimmermann accidentals (24-EDO)",
    glyphs: [
      SmuflGlyph.accidentalQuarterToneFlatStein,
      SmuflGlyph.accidentalThreeQuarterTonesFlatZimmermann,
      SmuflGlyph.accidentalQuarterToneSharpStein,
      SmuflGlyph.accidentalThreeQuarterTonesSharpStein,
      SmuflGlyph.accidentalNarrowReversedFlat,
      SmuflGlyph.accidentalNarrowReversedFlatAndFlat,
    ],
    rangeStart: "\uE280",
    rangeEnd: "\uE28F",
  );

  /// Stems.
  static const GlyphRange stems = GlyphRange(
    description: "Stems",
    glyphs: [
      SmuflGlyph.stem,
      SmuflGlyph.stemSprechgesang,
      SmuflGlyph.stemSwished,
      SmuflGlyph.stemPendereckiTremolo,
      SmuflGlyph.stemSulPonticello,
      SmuflGlyph.stemBowOnBridge,
      SmuflGlyph.stemBowOnTailpiece,
      SmuflGlyph.stemBuzzRoll,
      SmuflGlyph.stemDamp,
      SmuflGlyph.stemVibratoPulse,
      SmuflGlyph.stemMultiphonicsBlack,
      SmuflGlyph.stemMultiphonicsWhite,
      SmuflGlyph.stemMultiphonicsBlackWhite,
      SmuflGlyph.stemSussurando,
      SmuflGlyph.stemRimShot,
      SmuflGlyph.stemHarpStringNoise,
    ],
    rangeStart: "\uE210",
    rangeEnd: "\uE21F",
  );

  /// Stockhausen accidentals (24-EDO).
  static const GlyphRange stockhausenAccidentals = GlyphRange(
    description: "Stockhausen accidentals (24-EDO)",
    glyphs: [
      SmuflGlyph.accidentalRaisedStockhausen,
      SmuflGlyph.accidentalLoweredStockhausen,
      SmuflGlyph.accidentalFlatRaisedStockhausen,
      SmuflGlyph.accidentalFlatLoweredStockhausen,
      SmuflGlyph.accidentalNaturalRaisedStockhausen,
      SmuflGlyph.accidentalNaturalLoweredStockhausen,
      SmuflGlyph.accidentalSharpRaisedStockhausen,
      SmuflGlyph.accidentalSharpLoweredStockhausen,
      SmuflGlyph.accidentalOneQuarterToneSharpStockhausen,
      SmuflGlyph.accidentalOneQuarterToneFlatStockhausen,
      SmuflGlyph.accidentalThreeQuarterTonesSharpStockhausen,
      SmuflGlyph.accidentalFlatRepeatedSpaceStockhausen,
      SmuflGlyph.accidentalFlatRepeatedLineStockhausen,
      SmuflGlyph.accidentalSharpRepeatedSpaceStockhausen,
      SmuflGlyph.accidentalSharpRepeatedLineStockhausen,
    ],
    rangeStart: "\uED50",
    rangeEnd: "\uED5F",
  );

  /// String techniques.
  static const GlyphRange stringTechniques = GlyphRange(
    description: "String techniques",
    glyphs: [
      SmuflGlyph.stringsDownBow,
      SmuflGlyph.stringsDownBowTurned,
      SmuflGlyph.stringsUpBow,
      SmuflGlyph.stringsUpBowTurned,
      SmuflGlyph.stringsHarmonic,
      SmuflGlyph.stringsHalfHarmonic,
      SmuflGlyph.stringsMuteOn,
      SmuflGlyph.stringsMuteOff,
      SmuflGlyph.stringsBowBehindBridge,
      SmuflGlyph.stringsBowOnBridge,
      SmuflGlyph.stringsBowOnTailpiece,
      SmuflGlyph.stringsOverpressureDownBow,
      SmuflGlyph.stringsOverpressureUpBow,
      SmuflGlyph.stringsOverpressurePossibileDownBow,
      SmuflGlyph.stringsOverpressurePossibileUpBow,
      SmuflGlyph.stringsOverpressureNoDirection,
      SmuflGlyph.stringsJeteAbove,
      SmuflGlyph.stringsJeteBelow,
      SmuflGlyph.stringsFouette,
      SmuflGlyph.stringsVibratoPulse,
      SmuflGlyph.stringsThumbPosition,
      SmuflGlyph.stringsThumbPositionTurned,
      SmuflGlyph.stringsChangeBowDirection,
      SmuflGlyph.stringsBowBehindBridgeOneString,
      SmuflGlyph.stringsBowBehindBridgeTwoStrings,
      SmuflGlyph.stringsBowBehindBridgeThreeStrings,
      SmuflGlyph.stringsBowBehindBridgeFourStrings,
    ],
    rangeStart: "\uE610",
    rangeEnd: "\uE62F",
  );

  /// Techniques noteheads.
  static const GlyphRange techniquesNoteheads = GlyphRange(
    description: "Techniques noteheads",
    glyphs: [
      SmuflGlyph.swissRudimentsNoteheadBlackFlam,
      SmuflGlyph.swissRudimentsNoteheadHalfFlam,
      SmuflGlyph.swissRudimentsNoteheadBlackDouble,
      SmuflGlyph.swissRudimentsNoteheadHalfDouble,
    ],
    rangeStart: "\uEE70",
    rangeEnd: "\uEE7F",
  );

  /// Time signatures.
  static const GlyphRange timeSignatures = GlyphRange(
    description: "Time signatures",
    glyphs: [
      SmuflGlyph.timeSig0,
      SmuflGlyph.timeSig1,
      SmuflGlyph.timeSig2,
      SmuflGlyph.timeSig3,
      SmuflGlyph.timeSig4,
      SmuflGlyph.timeSig5,
      SmuflGlyph.timeSig6,
      SmuflGlyph.timeSig7,
      SmuflGlyph.timeSig8,
      SmuflGlyph.timeSig9,
      SmuflGlyph.timeSigCommon,
      SmuflGlyph.timeSigCutCommon,
      SmuflGlyph.timeSigPlus,
      SmuflGlyph.timeSigPlusSmall,
      SmuflGlyph.timeSigFractionalSlash,
      SmuflGlyph.timeSigEquals,
      SmuflGlyph.timeSigMinus,
      SmuflGlyph.timeSigMultiply,
      SmuflGlyph.timeSigParensLeftSmall,
      SmuflGlyph.timeSigParensRightSmall,
      SmuflGlyph.timeSigParensLeft,
      SmuflGlyph.timeSigParensRight,
      SmuflGlyph.timeSigComma,
      SmuflGlyph.timeSigFractionQuarter,
      SmuflGlyph.timeSigFractionHalf,
      SmuflGlyph.timeSigFractionThreeQuarters,
      SmuflGlyph.timeSigFractionOneThird,
      SmuflGlyph.timeSigFractionTwoThirds,
      SmuflGlyph.timeSigX,
      SmuflGlyph.timeSigOpenPenderecki,
      SmuflGlyph.timeSigCombNumerator,
      SmuflGlyph.timeSigCombDenominator,
    ],
    rangeStart: "\uE080",
    rangeEnd: "\uE09F",
  );

  /// Reversed time signatures.
  static const GlyphRange timeSignaturesReversed = GlyphRange(
    description: "Reversed time signatures",
    glyphs: [
      SmuflGlyph.timeSig0Reversed,
      SmuflGlyph.timeSig1Reversed,
      SmuflGlyph.timeSig2Reversed,
      SmuflGlyph.timeSig3Reversed,
      SmuflGlyph.timeSig4Reversed,
      SmuflGlyph.timeSig5Reversed,
      SmuflGlyph.timeSig6Reversed,
      SmuflGlyph.timeSig7Reversed,
      SmuflGlyph.timeSig8Reversed,
      SmuflGlyph.timeSig9Reversed,
      SmuflGlyph.timeSigCommonReversed,
      SmuflGlyph.timeSigCutCommonReversed,
    ],
    rangeStart: "\uECF0",
    rangeEnd: "\uECFF",
  );

  /// Time signatures supplement.
  static const GlyphRange timeSignaturesSupplement = GlyphRange(
    description: "Time signatures supplement",
    glyphs: [
      SmuflGlyph.timeSigBracketLeft,
      SmuflGlyph.timeSigBracketRight,
      SmuflGlyph.timeSigBracketLeftSmall,
      SmuflGlyph.timeSigBracketRightSmall,
      SmuflGlyph.timeSigSlash,
      SmuflGlyph.timeSigCut2,
      SmuflGlyph.timeSigCut3,
    ],
    rangeStart: "\uEC80",
    rangeEnd: "\uEC8F",
  );

  /// Turned time signatures.
  static const GlyphRange timeSignaturesTurned = GlyphRange(
    description: "Turned time signatures",
    glyphs: [
      SmuflGlyph.timeSig0Turned,
      SmuflGlyph.timeSig1Turned,
      SmuflGlyph.timeSig2Turned,
      SmuflGlyph.timeSig3Turned,
      SmuflGlyph.timeSig4Turned,
      SmuflGlyph.timeSig5Turned,
      SmuflGlyph.timeSig6Turned,
      SmuflGlyph.timeSig7Turned,
      SmuflGlyph.timeSig8Turned,
      SmuflGlyph.timeSig9Turned,
      SmuflGlyph.timeSigCommonTurned,
      SmuflGlyph.timeSigCutCommonTurned,
    ],
    rangeStart: "\uECE0",
    rangeEnd: "\uECEF",
  );

  /// Tremolos.
  static const GlyphRange tremolos = GlyphRange(
    description: "Tremolos",
    glyphs: [
      SmuflGlyph.tremolo1,
      SmuflGlyph.tremolo2,
      SmuflGlyph.tremolo3,
      SmuflGlyph.tremolo4,
      SmuflGlyph.tremolo5,
      SmuflGlyph.tremoloFingered1,
      SmuflGlyph.tremoloFingered2,
      SmuflGlyph.tremoloFingered3,
      SmuflGlyph.tremoloFingered4,
      SmuflGlyph.tremoloFingered5,
      SmuflGlyph.buzzRoll,
      SmuflGlyph.pendereckiTremolo,
      SmuflGlyph.unmeasuredTremolo,
      SmuflGlyph.unmeasuredTremoloSimple,
      SmuflGlyph.tremoloDivisiDots2,
      SmuflGlyph.tremoloDivisiDots3,
      SmuflGlyph.tremoloDivisiDots4,
      SmuflGlyph.tremoloDivisiDots6,
      SmuflGlyph.stockhausenTremolo,
      SmuflGlyph.oneHandedRollStevens,
      SmuflGlyph.doubleLateralRollStevens,
    ],
    rangeStart: "\uE220",
    rangeEnd: "\uE23F",
  );

  /// Trojan Sagittal extension (12-EDO relative) accidentals.
  static const GlyphRange trojanSagittalExtension12EdoRelativeAccidentals =
      GlyphRange(
    description: "Trojan Sagittal extension (12-EDO relative) accidentals",
    glyphs: [
      SmuflGlyph.accSagittal23CommaUp,
      SmuflGlyph.accSagittal23CommaDown,
      SmuflGlyph.accSagittal5v19CommaUp,
      SmuflGlyph.accSagittal5v19CommaDown,
      SmuflGlyph.accSagittal5v23SmallDiesisUp,
      SmuflGlyph.accSagittal5v23SmallDiesisDown,
      SmuflGlyph.accSagittalSharp5v23SDown,
      SmuflGlyph.accSagittalFlat5v23SUp,
      SmuflGlyph.accSagittalSharp5v19CDown,
      SmuflGlyph.accSagittalFlat5v19CUp,
      SmuflGlyph.accSagittalSharp23CDown,
      SmuflGlyph.accSagittalFlat23CUp,
      SmuflGlyph.accSagittalSharp23CUp,
      SmuflGlyph.accSagittalFlat23CDown,
      SmuflGlyph.accSagittalSharp5v19CUp,
      SmuflGlyph.accSagittalFlat5v19CDown,
      SmuflGlyph.accSagittalSharp5v23SUp,
      SmuflGlyph.accSagittalFlat5v23SDown,
      SmuflGlyph.accSagittalDoubleSharp5v23SDown,
      SmuflGlyph.accSagittalDoubleFlat5v23SUp,
      SmuflGlyph.accSagittalDoubleSharp5v19CDown,
      SmuflGlyph.accSagittalDoubleFlat5v19CUp,
      SmuflGlyph.accSagittalDoubleSharp23CDown,
      SmuflGlyph.accSagittalDoubleFlat23CUp,
    ],
    rangeStart: "\uE370",
    rangeEnd: "\uE38F",
  );

  /// Tuned mallet percussion pictograms.
  static const GlyphRange tunedMalletPercussionPictograms = GlyphRange(
    description: "Tuned mallet percussion pictograms",
    glyphs: [
      SmuflGlyph.pictGlsp,
      SmuflGlyph.pictXyl,
      SmuflGlyph.pictXylTenor,
      SmuflGlyph.pictXylBass,
      SmuflGlyph.pictXylTrough,
      SmuflGlyph.pictXylTenorTrough,
      SmuflGlyph.pictMar,
      SmuflGlyph.pictVib,
      SmuflGlyph.pictVibMotorOff,
      SmuflGlyph.pictEmptyTrap,
      SmuflGlyph.pictGlspSmithBrindle,
      SmuflGlyph.pictXylSmithBrindle,
      SmuflGlyph.pictMarSmithBrindle,
      SmuflGlyph.pictVibSmithBrindle,
      SmuflGlyph.pictCrotales,
      SmuflGlyph.pictSteelDrums,
      SmuflGlyph.pictCelesta,
      SmuflGlyph.pictLithophone,
      SmuflGlyph.pictTubaphone,
    ],
    rangeStart: "\uE6A0",
    rangeEnd: "\uE6BF",
  );

  /// Tuplets.
  static const GlyphRange tuplets = GlyphRange(
    description: "Tuplets",
    glyphs: [
      SmuflGlyph.tuplet0,
      SmuflGlyph.tuplet1,
      SmuflGlyph.tuplet2,
      SmuflGlyph.tuplet3,
      SmuflGlyph.tuplet4,
      SmuflGlyph.tuplet5,
      SmuflGlyph.tuplet6,
      SmuflGlyph.tuplet7,
      SmuflGlyph.tuplet8,
      SmuflGlyph.tuplet9,
      SmuflGlyph.tupletColon,
    ],
    rangeStart: "\uE880",
    rangeEnd: "\uE88F",
  );

  /// Turkish folk music accidentals.
  static const GlyphRange turkishFolkMusicAccidentals = GlyphRange(
    description: "Turkish folk music accidentals",
    glyphs: [
      SmuflGlyph.accidental1CommaSharp,
      SmuflGlyph.accidental2CommaSharp,
      SmuflGlyph.accidental3CommaSharp,
      SmuflGlyph.accidental5CommaSharp,
      SmuflGlyph.accidental1CommaFlat,
      SmuflGlyph.accidental2CommaFlat,
      SmuflGlyph.accidental3CommaFlat,
      SmuflGlyph.accidental4CommaFlat,
    ],
    rangeStart: "\uE450",
    rangeEnd: "\uE45F",
  );

  /// Vocal techniques.
  static const GlyphRange vocalTechniques = GlyphRange(
    description: "Vocal techniques",
    glyphs: [
      SmuflGlyph.vocalMouthClosed,
      SmuflGlyph.vocalMouthSlightlyOpen,
      SmuflGlyph.vocalMouthOpen,
      SmuflGlyph.vocalMouthWideOpen,
      SmuflGlyph.vocalMouthPursed,
      SmuflGlyph.vocalSprechgesang,
      SmuflGlyph.vocalsSussurando,
      SmuflGlyph.vocalNasalVoice,
      SmuflGlyph.vocalTongueClickStockhausen,
      SmuflGlyph.vocalFingerClickStockhausen,
      SmuflGlyph.vocalTongueFingerClickStockhausen,
      SmuflGlyph.vocalHalbGesungen,
    ],
    rangeStart: "\uE640",
    rangeEnd: "\uE64F",
  );

  /// Whistles and aerophones pictograms.
  static const GlyphRange whistlesAndAerophonesPictograms = GlyphRange(
    description: "Whistles and aerophones pictograms",
    glyphs: [
      SmuflGlyph.pictSlideWhistle,
      SmuflGlyph.pictBirdWhistle,
      SmuflGlyph.pictPoliceWhistle,
      SmuflGlyph.pictSiren,
      SmuflGlyph.pictWindMachine,
      SmuflGlyph.pictCarHorn,
      SmuflGlyph.pictKlaxonHorn,
      SmuflGlyph.pictDuckCall,
      SmuflGlyph.pictWindWhistle,
      SmuflGlyph.pictMegaphone,
      SmuflGlyph.pictLotusFlute,
    ],
    rangeStart: "\uE750",
    rangeEnd: "\uE75F",
  );

  /// Wind techniques.
  static const GlyphRange windTechniques = GlyphRange(
    description: "Wind techniques",
    glyphs: [
      SmuflGlyph.doubleTongueAbove,
      SmuflGlyph.doubleTongueBelow,
      SmuflGlyph.tripleTongueAbove,
      SmuflGlyph.tripleTongueBelow,
      SmuflGlyph.windClosedHole,
      SmuflGlyph.windThreeQuartersClosedHole,
      SmuflGlyph.windHalfClosedHole1,
      SmuflGlyph.windHalfClosedHole2,
      SmuflGlyph.windHalfClosedHole3,
      SmuflGlyph.windOpenHole,
      SmuflGlyph.windTrillKey,
      SmuflGlyph.windFlatEmbouchure,
      SmuflGlyph.windSharpEmbouchure,
      SmuflGlyph.windRelaxedEmbouchure,
      SmuflGlyph.windLessRelaxedEmbouchure,
      SmuflGlyph.windTightEmbouchure,
      SmuflGlyph.windLessTightEmbouchure,
      SmuflGlyph.windVeryTightEmbouchure,
      SmuflGlyph.windWeakAirPressure,
      SmuflGlyph.windStrongAirPressure,
      SmuflGlyph.windReedPositionNormal,
      SmuflGlyph.windReedPositionOut,
      SmuflGlyph.windReedPositionIn,
      SmuflGlyph.windMultiphonicsBlackStem,
      SmuflGlyph.windMultiphonicsWhiteStem,
      SmuflGlyph.windMultiphonicsBlackWhiteStem,
      SmuflGlyph.windMouthpiecePop,
      SmuflGlyph.windRimOnly,
    ],
    rangeStart: "\uE5F0",
    rangeEnd: "\uE60F",
  );

  /// Wooden struck or scraped percussion pictograms.
  static const GlyphRange woodenStruckOrScrapedPercussionPictograms =
      GlyphRange(
    description: "Wooden struck or scraped percussion pictograms",
    glyphs: [
      SmuflGlyph.pictWoodBlock,
      SmuflGlyph.pictTempleBlocks,
      SmuflGlyph.pictClaves,
      SmuflGlyph.pictGuiro,
      SmuflGlyph.pictRatchet,
      SmuflGlyph.pictFootballRatchet,
      SmuflGlyph.pictWhip,
      SmuflGlyph.pictBoardClapper,
      SmuflGlyph.pictCastanets,
      SmuflGlyph.pictCastanetsWithHandle,
      SmuflGlyph.pictQuijada,
      SmuflGlyph.pictBambooScraper,
      SmuflGlyph.pictRecoReco,
    ],
    rangeStart: "\uE6F0",
    rangeEnd: "\uE6FF",
  );

  /// Wyschnegradsky accidentals (72-EDO).
  static const GlyphRange wyschnegradskyAccidentals72Edo = GlyphRange(
    description: "Wyschnegradsky accidentals (72-EDO)",
    glyphs: [
      SmuflGlyph.accidentalWyschnegradsky1TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky2TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky3TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky4TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky5TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky6TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky7TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky8TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky9TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky10TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky11TwelfthsSharp,
      SmuflGlyph.accidentalWyschnegradsky1TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky2TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky3TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky4TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky5TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky6TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky7TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky8TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky9TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky10TwelfthsFlat,
      SmuflGlyph.accidentalWyschnegradsky11TwelfthsFlat,
    ],
    rangeStart: "\uE420",
    rangeEnd: "\uE43F",
  );
}

/// A named range of glyphs in the Standard Music Font Layout (SMuFL) metadata.
/// Each range is associated with a specific category of musical symbols.
class GlyphRange {
  /// A brief description of the glyph range.
  /// This description typically provides additional context about the category of musical symbols.
  final String description;

  /// Glyphs in the range.
  /// Each [SmuflGlyph] uniquely identifies a glyph within the SMuFL specification.
  final List<SmuflGlyph> glyphs;

  /// The Unicode range start of the glyph range.
  /// This is a Unicode code point that specifies the start of the range in the SMuFL specification.
  final String rangeStart;

  /// The Unicode range end of the glyph range.
  /// This is a Unicode code point that specifies the end of the range in the SMuFL specification.
  final String rangeEnd;

  /// Default constructor for Range.
  const GlyphRange({
    required this.description,
    required this.glyphs,
    required this.rangeStart,
    required this.rangeEnd,
  });
}
