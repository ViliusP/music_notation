// Generated by tool.

import 'package:music_notation/src/smufl/smufl_glyph.dart';

/// Information about the way glyphs are presented in discrete ranges in this specification.
class GlyphRanges {
  {% for range in ranges %}
  /// {{ range.description|replace('"', '\"') }}.
  static const GlyphRange {{ range.name|replace('รก', 'a') }} = GlyphRange(
    description: "{{ range.description|replace('"', '\"') }}",
    glyphs: [
      {% for glyph in range.glyphs %}
      {% if glyph[0] in '0123456789' %}
        {% set enumName = "g" + glyph %}
      {% else %}
        {% set enumName = glyph %}
      {% endif %}SmuflGlyph.{{ enumName }},
      {% endfor %}
    ],
    rangeStart: "{{ range.range_start|replace('U+', '\u') }}",
    rangeEnd: "{{ range.range_end|replace('U+', '\u') }}",
  );

  {% endfor %}
}


/// A named range of glyphs in the Standard Music Font Layout (SMuFL) metadata.
/// Each range is associated with a specific category of musical symbols.
class GlyphRange {
  /// A brief description of the glyph range.
  /// This description typically provides additional context about the category of musical symbols.
  final String description;

  /// Glyphs in the range.
  /// Each [SmuflGlyph] uniquely identifies a glyph within the SMuFL specification.
  final List<SmuflGlyph> glyphs;

  /// The Unicode range start of the glyph range.
  /// This is a Unicode code point that specifies the start of the range in the SMuFL specification.
  final String rangeStart;

  /// The Unicode range end of the glyph range.
  /// This is a Unicode code point that specifies the end of the range in the SMuFL specification.
  final String rangeEnd;

  /// Default constructor for Range.
  const GlyphRange({
    required this.description,
    required this.glyphs,
    required this.rangeStart,
    required this.rangeEnd,
  });
}
